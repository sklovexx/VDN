{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\Script\\components/assets\\Script\\components\\ShaderTime.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAAwC,8BAAY;IADpD;QAAA,qEA6CC;QAxCG,UAAI,GAAW,KAAK,CAAC;QAwBb,YAAM,GAAG,CAAC,CAAC;;IAgBvB,CAAC;IAnCG,sBAAI,2BAAG;aAAP;YACI,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;aACD,UAAQ,KAAK;YACT,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;YAClB,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO;aACV;YAED,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC;YAC/C,IAAI,MAAM,EAAE;gBACR,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBACjE,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE;oBACxC,IAAI,QAAQ,GAAQ,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;oBAC9C,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;iBAC9C;aACJ;QACL,CAAC;;;OAfA;IAmBS,2BAAM,GAAhB,UAAiB,EAAE;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;QACtE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE;YAC9E,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;SAC3B;IACL,CAAC;IACO,mCAAc,GAAtB,UAAuB,EAAE;QACrB,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG;YAAE,KAAK,GAAG,CAAC,CAAC;QAChC,KAAK,IAAI,IAAI,CAAC;QACd,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAEjD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxB,CAAC;IAvCD;QADC,QAAQ;4CACY;IAKrB;QADC,QAAQ;yCAGR;IAXgB,UAAU;QAD9B,OAAO;OACa,UAAU,CA4C9B;IAAD,iBAAC;CA5CD,AA4CC,CA5CuC,EAAE,CAAC,SAAS,GA4CnD;kBA5CoB,UAAU","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\components","sourcesContent":["\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class ShaderTime extends cc.Component {\r\n    _material: any;\r\n    \r\n    @property\r\n    _max: number = 65535;\r\n\r\n    isUpdate: boolean;\r\n\r\n    @property\r\n    get max(): number {\r\n        return this._max;\r\n    }\r\n    set max(value) {\r\n        this._max = value;\r\n        if (!CC_EDITOR) {\r\n            return;\r\n        }\r\n        \r\n        let sprite = this.node.getComponent(cc.Sprite);\r\n        if (sprite) {\r\n            this._material = this.getComponent(cc.Sprite).sharedMaterials[0];\r\n            if (this._material.effect._properties.time) {\r\n                let material: any = sprite.sharedMaterials[0];\r\n                material.effect.setProperty('time', value);\r\n            }\r\n        }\r\n    }\r\n    \r\n    private _start = 0;\r\n\r\n    protected update(dt) {\r\n        this._material = this.node.getComponent(cc.Sprite).sharedMaterials[0];\r\n        if (this.node.active && this._material && this._material.effect._properties.time) {\r\n            this._setShaderTime(dt);\r\n        }\r\n    }\r\n    private _setShaderTime(dt) {\r\n        let start = this._start;\r\n        if (start > this.max) start = 0;\r\n        start += 0.02;\r\n        this._material.effect.setProperty('time', start);\r\n\r\n        this._start = start;\r\n    }\r\n}\r\n"]}