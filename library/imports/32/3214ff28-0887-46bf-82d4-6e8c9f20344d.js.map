{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\NiuNiu\\script\\config/assets\\NiuNiu\\script\\config\\DailyRewardData.js"],"names":["UtilsOther","require","dataList","DailyRewardData","cc","Class","properties","id","roleMaxLevel","rewardInfos","rewardInfoArr","init","jsonData","clone","Number","splitWithValueType","String","forEach","currentValue","index","array","info","coins","weight","setData","_jsonData","initData","list","v","rewardData","push","getRewardData","count","length","minLevel","maxLevel","i","MAX_VALUE"],"mappings":";;;;AAAA;;;;AAIA;;AAEA,IAAIA,aAAaC,QAAQ,wBAAR,CAAjB;;AAEA,IAAIC,WAAW,EAAf;;AAEA,IAAIC,kBAAkBC,GAAGC,KAAH,CAAS;AAC3BC,gBAAY;AACRC,YAAI,CAAC,CADG;AAERC,sBAAc,CAFN;;AAIRC,qBAAa,EAJL;AAKRC,uBAAe;AALP,KADe;;AAS3BC,QAT2B,gBASrBC,QATqB,EASX;AACZZ,mBAAWa,KAAX,CAAiBD,QAAjB,EAA2B,IAA3B;;AAEA,aAAKL,EAAL,GAAUO,OAAO,KAAKP,EAAZ,CAAV;AACA,aAAKC,YAAL,GAAoBM,OAAO,KAAKN,YAAZ,CAApB;;AAEA,YAAI,KAAKC,WAAL,IAAoB,KAAKA,WAAL,IAAoB,IAA5C,EAAkD;AAC9C,iBAAKC,aAAL,GAAqBV,WAAWe,kBAAX,CAA8B,KAAKN,WAAnC,EAAgDO,MAAhD,EAAwD,GAAxD,CAArB;AACA,iBAAKN,aAAL,CAAmBO,OAAnB,CAA2B,UAAUC,YAAV,EAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AAC7D,oBAAIC,OAAOrB,WAAWe,kBAAX,CAA8BG,YAA9B,EAA4CJ,MAA5C,EAAoD,GAApD,CAAX;AACAM,sBAAMD,KAAN,IAAe,EAACG,OAAOD,KAAK,CAAL,CAAR,EAAiBE,QAAQF,KAAK,CAAL,CAAzB,EAAf;AACH,aAHD;AAIH;AACJ;AAtB0B,CAAT,CAAtB;;AAyBAlB,gBAAgBqB,OAAhB,GAA0B,UAAUZ,QAAV,EAAoB;AAC1CT,oBAAgBsB,SAAhB,GAA4Bb,QAA5B;AACH,CAFD;;AAIA;;;;AAIAT,gBAAgBuB,QAAhB,GAA2B,YAAY;AACnC,QAAI,CAACvB,gBAAgBsB,SAArB,EAAgC;AAC5B;AACH;;AAED,QAAIE,OAAOxB,gBAAgBsB,SAA3B;AALmC;AAAA;AAAA;;AAAA;AAMnC,6BAAcE,IAAd,8HAAoB;AAAA,gBAAXC,CAAW;;AAChB,gBAAIC,aAAa,IAAI1B,eAAJ,EAAjB;AACA0B,uBAAWlB,IAAX,CAAgBiB,CAAhB;;AAEA1B,qBAAS4B,IAAT,CAAcD,UAAd;AACH;AAXkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAanC,WAAO1B,gBAAgBsB,SAAvB;AACAtB,oBAAgBsB,SAAhB,GAA4B,IAA5B;AACH,CAfD;;AAiBA;;;;;AAKAtB,gBAAgB4B,aAAhB,GAAgC,UAAUvB,YAAV,EAAwB;AACpD,QAAIwB,QAAQ9B,SAAS+B,MAArB;AACA,QAAID,SAAS,CAAb,EAAgB;AACZ,eAAO,IAAP;AACH;;AAED,QAAIE,WAAW,CAAf;AAAA,QAAkBC,WAAW,CAA7B;AACA,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,KAApB,EAA2BI,GAA3B,EAAgC;AAC5BF,mBAAWhC,SAASkC,CAAT,EAAY5B,YAAvB;AACA,YAAI4B,IAAI,CAAJ,GAAQJ,KAAZ,EAAmB;AACfG,uBAAWjC,SAASkC,IAAI,CAAb,EAAgB5B,YAA3B;AACH,SAFD,MAEO;AACH2B,uBAAWrB,OAAOuB,SAAlB;AACH;;AAED,YAAI7B,gBAAgB0B,QAAhB,IAA4B1B,eAAe2B,QAA/C,EAAyD;AACrD,mBAAOjC,SAASkC,CAAT,CAAP;AACH;AACJ;;AAED,WAAOlC,SAAS8B,QAAQ,CAAjB,CAAP;AACH,CArBD","file":"DailyRewardData.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\NiuNiu\\script\\config","sourcesContent":["/**\n * Created by edisonjiang on 2018/8/31.\n */\n\n\"use strict\";\n\nlet UtilsOther = require(\"./../common/UtilsOther\");\n\nlet dataList = [];\n\nlet DailyRewardData = cc.Class({\n    properties: {\n        id: -1,\n        roleMaxLevel: 0,\n\n        rewardInfos: \"\",\n        rewardInfoArr: []\n    },\n\n    init (jsonData) {\n        UtilsOther.clone(jsonData, this);\n\n        this.id = Number(this.id);\n        this.roleMaxLevel = Number(this.roleMaxLevel);\n\n        if (this.rewardInfos && this.rewardInfos != \"-1\") {\n            this.rewardInfoArr = UtilsOther.splitWithValueType(this.rewardInfos, String, \";\");\n            this.rewardInfoArr.forEach(function (currentValue, index, array) {\n                let info = UtilsOther.splitWithValueType(currentValue, Number, \",\");\n                array[index] = {coins: info[0], weight: info[1]};\n            });\n        }\n    }\n});\n\nDailyRewardData.setData = function (jsonData) {\n    DailyRewardData._jsonData = jsonData;\n};\n\n/**\n * 初始化数据\n * @property {Object} jsonData\n */\nDailyRewardData.initData = function () {\n    if (!DailyRewardData._jsonData) {\n        return;\n    }\n\n    let list = DailyRewardData._jsonData;\n    for (let v of list) {\n        let rewardData = new DailyRewardData();\n        rewardData.init(v);\n\n        dataList.push(rewardData);\n    }\n\n    delete DailyRewardData._jsonData;\n    DailyRewardData._jsonData = null;\n};\n\n/**\n * 根据角色的最大等级得到数据\n * @param {Number} roleMaxLevel\n * @returns {DailyRewardData}\n */\nDailyRewardData.getRewardData = function (roleMaxLevel) {\n    let count = dataList.length;\n    if (count <= 0) {\n        return null;\n    }\n\n    let minLevel = 0, maxLevel = 0;\n    for (let i = 0; i < count; i++) {\n        minLevel = dataList[i].roleMaxLevel;\n        if (i + 1 < count) {\n            maxLevel = dataList[i + 1].roleMaxLevel;\n        } else {\n            maxLevel = Number.MAX_VALUE;\n        }\n\n        if (roleMaxLevel >= minLevel && roleMaxLevel < maxLevel) {\n            return dataList[i];\n        }\n    }\n\n    return dataList[count - 1];\n};\n"]}