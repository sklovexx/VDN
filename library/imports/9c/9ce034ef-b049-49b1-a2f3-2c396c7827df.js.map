{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\ddz\\scripts\\data/assets\\ddz\\scripts\\data\\socket_ctr.js"],"names":["socketCtr","that","respone_map","call_index","_socket","event","_sendmsg","cmdtype","req","callindex","emit","cmd","data","_request","callback","console","log","JSON","stringify","initSocket","opts","window","io","connect","defines","serverUrl","on","cc","director","GlobalEvent","res","type","hasOwnProperty","callBackIndex","result","fire","request_wxLogin","login","request_creatroom","request_jion","request_enter_room","request_buchu_card","request_chu_card","request_quit_room","onPlayerJoinRoom","onPlayerReady","onGameStart","onChangeHouseManage","requestReady","requestStart","requestConfig","requestRobState","state","onPushCards","onCanRobState","onRobState","onChangeMaster","onShowBottomCard","onBeiShuUpdate","onCanChuCard","onRoomChangeState","onQuitPlayer","onGameResult","onOtherPlayerChuCard","oninterval","onendInterval","disconnect","clearEvent","removeAllLister"],"mappings":"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","file":"socket_ctr.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\ddz\\scripts\\data","sourcesContent":["import eventlister from \"../util/event_lister.js\"\r\n\r\nconst socketCtr = function(){\r\n    var that = {}\r\n    var respone_map = {} \r\n    var call_index = 0\r\n\r\n    var _socket = null\r\n    var event = eventlister({})\r\n    const _sendmsg = function(cmdtype,req,callindex){\r\n        _socket.emit(\"notify\",{cmd:cmdtype,data:req,callindex:callindex})\r\n    } \r\n \r\n    const _request = function(cmdtype,req,callback){\r\n        console.log(\"send cmd:\"+cmdtype+\"  \"+ JSON.stringify(req))\r\n        call_index++ \r\n        respone_map[call_index] = callback\r\n        _sendmsg(cmdtype,req,call_index)\r\n    } \r\n  \r\n        \r\n    that.initSocket = function(){\r\n        var opts = {\r\n            'reconnection':false,\r\n            'force new connection': true,\r\n            'transports':['websocket', 'polling']\r\n        }\r\n        _socket = window.io.connect(defines.serverUrl,opts);\r\n\r\n        _socket.on(\"connection\",function(){\r\n            console.log(\"connect server success!!\")\r\n            cc.director.GlobalEvent.emit('connected')\r\n          })\r\n\r\n       _socket.on(\"notify\",function(res){\r\n            if(res.type!='interval'){\r\n                console.log(\"on notify cmd:\" + JSON.stringify(res))\r\n            }\r\n         \r\n         if(respone_map.hasOwnProperty(res.callBackIndex)){\r\n           var callback = respone_map[res.callBackIndex]\r\n           if(callback){\r\n               callback(res.result,res.data)\r\n           }\r\n          }else{\r\n           //if(res.callBackIndex!=0){\r\n           //console.log(\"not found call index\",res.callBackIndex)\r\n              \r\n               //提交一个监听的事件给监听器\r\n        //  on notify cmd:{\"type\":\"player_joinroom_notify\",\"result\":0,\"data\":\r\n        //  {\"accountid\":\"2586422\",\"nick_name\":\"tiny110\",\"avatarUrl\":\r\n        //  \"avatar_3\",\"goldcount\":1000,\"seatindex\":2},\"callBackIndex\":null}\r\n              //没有找到回到函数，就给事件监听器提交一个事件\r\n              var type = res.type\r\n              event.fire(type,res.data)\r\n          // }\r\n           \r\n         }\r\n\r\n        })\r\n\r\n    }\r\n\r\n    that.request_wxLogin = function(req,callback){\r\n        _request(\"wxlogin\",req,callback)\r\n    }\r\n    that.login = function(req,callback){\r\n        _request(\"login\",req,callback)\r\n    }\r\n    that.request_creatroom = function(req,callback){\r\n        _request(\"createroom_req\",req,callback)\r\n    }\r\n\r\n    that.request_jion = function(req,callback){\r\n        _request(\"joinroom_req\",req,callback)\r\n    }\r\n\r\n    that.request_enter_room = function(req,callback){\r\n        _request(\"enterroom_req\",req,callback)\r\n    }\r\n\r\n    //发送不出牌信息\r\n    that.request_buchu_card =  function(req,callback){\r\n        _request(\"chu_bu_card_req\",req,callback)\r\n    }\r\n    /*玩家出牌\r\n      需要判断: \r\n         出的牌是否符合规则\r\n         和上个出牌玩家比较，是否满足条件\r\n\r\n    */\r\n    that.request_chu_card = function(req,callback){\r\n        _request(\"chu_card_req\",req,callback)\r\n    }\r\n    that.request_quit_room = function(req,callback){\r\n        _request(\"quitroom_req\",req,callback)\r\n    }\r\n    //监听其他玩家进入房间消息\r\n    that.onPlayerJoinRoom = function(callback){\r\n         event.on(\"player_joinroom_notify\",callback)\r\n    }\r\n\r\n    that.onPlayerReady = function(callback){\r\n        event.on(\"player_ready_notify\",callback)\r\n    }\r\n\r\n    that.onGameStart = function(callback){\r\n        if(callback){\r\n           event.on(\"gameStart_notify\",callback)\r\n        }\r\n    }\r\n\r\n    that.onChangeHouseManage = function(callback){\r\n        if(callback){\r\n            event.on(\"changehousemanage_notify\",callback)\r\n        }\r\n    }\r\n    //发送ready消息\r\n    that.requestReady = function(callback){\r\n        _sendmsg(\"player_ready_notify\",{},callback)\r\n    }\r\n    that.requestStart = function(callback){\r\n        _request(\"player_start_notify\",{},callback)\r\n    }\r\n    that.requestConfig = function(callback){\r\n        _request(\"config_req\",{},callback)\r\n    }\r\n    //玩家通知服务器抢地主消息\r\n    that.requestRobState = function(state){\r\n        _sendmsg(\"player_rob_notify\",state,null)\r\n    }\r\n    //服务器下发牌通知\r\n    that.onPushCards = function(callback){\r\n        if(callback){\r\n            event.on(\"pushcard_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器通知开始抢地主消息\r\n    that.onCanRobState = function(callback){\r\n        if(callback){\r\n            event.on(\"canrob_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器:通知谁抢地主操作消息\r\n    that.onRobState = function(callback){\r\n        if(callback){\r\n            event.on(\"canrob_state_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器:确定地主消息\r\n    that.onChangeMaster = function(callback){\r\n        if(callback){\r\n            event.on(\"change_master_notify\",callback)\r\n         }\r\n    }\r\n\r\n    //监听服务器:显示底牌消息\r\n    that.onShowBottomCard = function(callback){\r\n        if(callback){\r\n            event.on(\"change_showcard_notify\",callback)\r\n         }\r\n    }\r\n    that.onBeiShuUpdate = function(callback){\r\n        if(callback){\r\n            event.on(\"curr_multiple_refresh_notify\",callback)\r\n        }\r\n    }\r\n    //监听服务器:可以出牌消息\r\n    that.onCanChuCard = function(callback){\r\n        if(callback){\r\n            event.on(\"can_chu_card_notify\",callback)\r\n        }\r\n    }\r\n\r\n    that.onRoomChangeState = function(callback){\r\n        if(callback){\r\n            event.on(\"room_state_notify\",callback)\r\n        }\r\n    }\r\n    that.onQuitPlayer = function(callback){\r\n        if(callback){\r\n            event.on(\"quit_player\",callback)\r\n        }\r\n    }\r\n    that.onGameResult = function(callback){\r\n        if(callback){\r\n            event.on(\"curr_settlement_result\",callback)\r\n        }\r\n    }\r\n    that.onOtherPlayerChuCard = function(callback){\r\n        if(callback){\r\n            event.on(\"curr_chucard_notify\",callback)\r\n        }\r\n    }\r\n    that.oninterval = function(callback){\r\n        if(callback){\r\n            event.on(\"interval\",callback)\r\n        }\r\n    }\r\n    that.onendInterval = function(callback){\r\n        if(callback){\r\n            event.on(\"endInterval\",callback)\r\n        }\r\n    }\r\n    that.disconnect = function(callback){\r\n        if(callback){\r\n            event.on(\"disconnect\",callback)\r\n        }\r\n    }\r\n    that.clearEvent = function(){\r\n        event.removeAllLister()\r\n    }\r\n    \r\n    return that\r\n}\r\n\r\nexport default socketCtr "]}