{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\NiuNiu\\script/assets\\NiuNiu\\script\\RoomNetCtrl.js"],"names":["Utils","require","Toast","Dialog","playerObj","getInstance","RoomCtrl","cc","Class","extends","properties","ridLabel","Label","webview","Node","onLoad","selfNodeCtrl","getPlayerNode","getComponent","startBets","bankerSeat","cardsArr","nextBankerSeat","mult","GlobalNiuNiu","config","ROOM_MULT","betTimeLabel","node","parent","active","listenEvent","seatOrder","inRoomUserMap","Map","start","schedule","myUpdate","initGame","betsTime","nowTime","audioMgr","playMusic","gameMusic","netProxy","registerPush","onConfigResponse","onStartGameResponse","onReady","onOtherReady","onCountRewardResponse","onOtherUserEnterRoom","onOtherUserExitRoom","onChangeBanker","onPushDeal","onPushUserBet","onPushStartBet","onPushShowCards","eventMgr","on","EVENT_OPEN_ROOM","onOpenRoom","bind","EVENT_ENTER_ROOM","onEnterRoom","resp","betConfig","bet1","bet2","bet3","bet4","error","err","showText","msg","showStart","showReady","showReadyState","showQuit","data","i","player","user","uid","console","log","countReward","arr","orders","getDealSeatOrder","splice","forEach","e","addReward","coins","reward","dataMgr","saveDataToLocal","event","string","rid","seats","initPlayerWithData","set","__getSelfSeatOrder","users","length","userObj","seat","__getUserShowSeat","userNodeCtrl","isBanker","delta","get","delete","cards","JSON","stringify","_serverCards","startDeal","bet","Number","playCtrl","showBet","expired","showMenu","u","playerCtrl","hands","openHands","s","order","tmp","push","cleanGame","p","clearHands","seatIndex","assert","getChildByName","startGame","show","loadScene","scheduleOnce","GAME_MODE","startBetDown","BETS_WAITING","robotDown","playEffect","effMdls","payBet","Math","random","count","cb","t","_dealAct","self","cardObj","card","instantiate","assetMgr","cardPrefab","initCard","point","suit","scale","zIndex","posOri","root","convertToNodeSpaceAR","convertToWorldSpaceAR","cardHeapSeat","getPosition","posDes","cardPanelLeft","v2","addChild","setPosition","runAction","sequence","delayTime","moveTo","callFunc","removeFromParent","x","y","showFace","effFapai","LOCAL_ZINDEX_MAX","create1pairPoker","slice","sortBig2Samll","effKaipai","countMult","typeReturn","handsType","HandsType","TYPE_NONE","TYPE_NIUNIU","max","banker","bankerType","bankerReward","ONLINE_MODE","openWebView","closeWebView","dt","ceil","onDestroy"],"mappings":"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","file":"RoomNetCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\NiuNiu\\script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\nlet Utils = require(\"./common/UtilsOther\");\nlet Toast = require(\"./views/ToastCtrl\");\nlet Dialog = require(\"./views/DialogCtrl\");\nlet playerObj = require(\"./common/DataMgr\").getInstance().playerObj;\nlet RoomCtrl = require(\"./RoomCtrl\");\n\ncc.Class({\n    extends: RoomCtrl,\n\n    properties: {\n        ridLabel: cc.Label,\n        webview:cc.Node,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        // 自己在正中间,座位号为2\n        this.selfNodeCtrl = this.getPlayerNode(2).getComponent(\"PlayerCtrl\");\n        this.startBets = false;  // 开始下注\n        this.bankerSeat = -1;    // 庄家座位号\n        this.cardsArr = [];      // 当前牌堆\n        this.nextBankerSeat = -1;    // 下一个庄家\n        this.mult = GlobalNiuNiu.config.ROOM_MULT;\n        this.betTimeLabel.node.parent.active = false;\n\n        this.listenEvent();\n        this.seatOrder = 0;  // 我的真实座次\n        this.inRoomUserMap = new Map(); // 存储玩家在牌桌上的座位号\n    },\n\n    start () {\n        this.schedule(this.myUpdate, 1);\n        this.initGame();\n        this.betsTime = 0;\n        this.nowTime = 0;\n        // this.startGame();\n\n        GlobalNiuNiu.audioMgr.playMusic(GlobalNiuNiu.audioMgr.gameMusic);\n    },\n\n    listenEvent(){\n        GlobalNiuNiu.netProxy.registerPush(\"config\", this.onConfigResponse, this);\n        GlobalNiuNiu.netProxy.registerPush(\"startGame\", this.onStartGameResponse, this);\n        GlobalNiuNiu.netProxy.registerPush(\"gameReady\", this.onReady, this);\n        GlobalNiuNiu.netProxy.registerPush(\"otherReady\", this.onOtherReady, this);\n        GlobalNiuNiu.netProxy.registerPush(\"countReward\", this.onCountRewardResponse, this);\n        GlobalNiuNiu.netProxy.registerPush(\"pEnterRoom\", this.onOtherUserEnterRoom, this);\n        GlobalNiuNiu.netProxy.registerPush(\"pExitRoom\", this.onOtherUserExitRoom, this);\n        GlobalNiuNiu.netProxy.registerPush(\"changeBanker\", this.onChangeBanker, this);\n        GlobalNiuNiu.netProxy.registerPush(\"pDeal\", this.onPushDeal, this);\n        GlobalNiuNiu.netProxy.registerPush(\"pBet\", this.onPushUserBet, this);\n        GlobalNiuNiu.netProxy.registerPush(\"pStartBet\", this.onPushStartBet, this);\n        GlobalNiuNiu.netProxy.registerPush(\"pShowCards\", this.onPushShowCards, this);\n\n\n        GlobalNiuNiu.eventMgr.on(GlobalNiuNiu.config.EVENT_OPEN_ROOM, this.onOpenRoom.bind(this));\n        GlobalNiuNiu.eventMgr.on(GlobalNiuNiu.config.EVENT_ENTER_ROOM, this.onEnterRoom.bind(this));\n    },\n    onConfigResponse(resp){\n        try {\n            let config = resp.config.betConfig;\n            this.selfNodeCtrl.bet1 = config[0];\n            this.selfNodeCtrl.bet2 = config[1];\n            this.selfNodeCtrl.bet3 = config[2];\n            this.selfNodeCtrl.bet4 = config[3];\n        } catch (error) {\n            \n        }\n    },\n    onStartGameResponse(resp){\n        try {\n            if(resp.err!=0){\n                Toast.showText(resp.msg, 2);\n                return;\n            }\n            this.selfNodeCtrl.showStart = false;\n        } catch (error) {\n            \n        }\n    },\n    onReady(){\n        try {\n            this.selfNodeCtrl.showReady = false;\n            this.selfNodeCtrl.showReadyState = true;\n            this.selfNodeCtrl.showQuit = false;\n        } catch (error) {\n            \n        }\n    },\n    onOtherReady(data){\n        try {\n            for(let i=0;i<5;i++){\n                let player = this.getPlayerNode(i).getComponent(\"PlayerCtrl\");\n                if(data.user.uid==player.uid){\n                    player.showReadyState = true;\n                }\n            }\n            if(data.user.uid==this.uid){\n                this.showReadyState = true;\n            }\n        } catch (error) {\n            \n        }\n    },\n    onCountRewardResponse(resp){\n        try {\n            console.log(resp.countReward)\n            let arr = resp.countReward;\n            let orders = this.getDealSeatOrder();\n            orders.splice(0,1);\n            for(let i=0;i<5;i++){\n                let player = this.getPlayerNode(i).getComponent(\"PlayerCtrl\");\n                arr.forEach(e=>{\n                    if(e.uid==player.uid){\n                        player.addReward(e.coins,e.reward);\n                    }\n                })\n            }\n            GlobalNiuNiu.dataMgr.playerObj.coins = this.selfNodeCtrl.coins;\n            GlobalNiuNiu.dataMgr.saveDataToLocal();\n        } catch (error) {\n            \n        }\n    },\n    onOpenRoom(event){\n        try {\n            console.log(event)\n            let data = event;\n            let user = data.user;\n            this.ridLabel.string = \"房间号:\" + data.rid;\n\n            // 初始化自己\n            this.seats[2].active = true;\n            this.selfNodeCtrl.initPlayerWithData(user);\n\n            // 默认房主是庄家\n            this.bankerSeat = 2;\n\n            this.selfNodeCtrl.showStart = true;\n            this.seatOrder = user.seatOrder;\n\n            this.inRoomUserMap.set(user.uid, 2);\n            GlobalNiuNiu.netProxy.config();\n            cc.log(\"开房成功.\");\n        } catch (error) {\n            \n        }\n    },\n\n    onEnterRoom(event){\n        try {\n            let data = event;\n            this.ridLabel.string = \"rid:\" + data.rid;\n            this.seatOrder = this.__getSelfSeatOrder(data.users);\n\n            for (let i=0; i<data.users.length; i++){\n                let userObj = data.users[i];\n                let seat = this.__getUserShowSeat(userObj.seatOrder);\n\n                this.seats[seat].active = true;\n                let userNodeCtrl = this.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\n                userNodeCtrl.initPlayerWithData(userObj);\n                this.bankerSeat = userObj.isBanker ? seat : this.bankerSeat;\n                this.inRoomUserMap.set(data.users[i].uid, seat);\n            }\n            GlobalNiuNiu.netProxy.config();\n            this.selfNodeCtrl.showReady = true;\n        } catch (error) {\n            \n        }\n    },\n\n    __getSelfSeatOrder(users){\n        for (let i=0; i<users.length; i++){\n            if (users[i].uid == playerObj.uid){\n                return users[i].seatOrder;\n            }\n        }\n\n        return -1;\n    },\n\n    /**\n     * 根据座次(真实座次)返回应该显示的座位号\n     * @param {Number}seatOrder\n     * @return {Number}\n     * @private\n     */\n    __getUserShowSeat(seatOrder){\n        let delta = 2 - this.seatOrder;\n        let seat = seatOrder + delta;\n        seat = seat >= 0 ? seat : (seat + 5);\n        seat = seat < 5 ? seat : (seat - 5);\n        return seat;\n    },\n\n    // 有其他玩家加入游戏\n    onOtherUserEnterRoom(resp){\n        try {\n            let user = resp.user;\n            let seat = this.__getUserShowSeat(user.seatOrder);\n\n            let userNodeCtrl = this.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\n            this.seats[seat].active = true;\n            userNodeCtrl.initPlayerWithData(user);\n            // if(this.selfNodeCtrl.isBanker){\n            //     userNodeCtrl.showKick = true;\n            // }\n            this.inRoomUserMap.set(user.uid, seat);\n        } catch (error) {\n            \n        }\n    },\n\n    onOtherUserExitRoom(resp){\n        try {\n            let user = resp.user;\n            let seat = this.inRoomUserMap.get(user.uid);\n            this.seats[seat].active = false;\n            this.inRoomUserMap.delete(user.uid);\n        } catch (error) {\n            \n        }\n    },\n    onChangeBanker(resp){\n        try {\n            let uid = resp.uid;\n            let seat = this.inRoomUserMap.get(uid);\n            let userNodeCtrl = this.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\n            userNodeCtrl.isBanker = true;\n            if(uid == playerObj.uid){\n                this.selfNodeCtrl.showStart = true;\n                this.selfNodeCtrl.showReady = false;\n                this.selfNodeCtrl.showReadyState = false;\n                this.selfNodeCtrl.showQuit = true;\n            }\n        } catch (error) {\n            \n        }\n    },\n    // 发牌\n    onPushDeal(resp){\n        try {\n            // todo: resp里只有自己的牌，其他玩家的牌只做动画\n            let cards = resp.cards;\n            cc.log(\"cards:\" + JSON.stringify(cards));\n            this.selfNodeCtrl.showQuit = false;\n            for(let i=0;i<5;i++){\n                let player = this.getPlayerNode(i).getComponent(\"PlayerCtrl\");\n                player.showReadyState = false;\n            }\n            this._serverCards = cards;\n            this.startDeal(cards.length, null);\n        } catch (error) {\n            \n        }\n    },\n\n    onPushUserBet(resp){\n        try {\n            let bet = Number(resp.bet);\n            let uid = resp.uid;\n            let playCtrl = this.getPlayerNode(this.inRoomUserMap.get(uid)).getComponent(\"PlayerCtrl\");\n            playCtrl.showBet(bet);\n        } catch (error) {\n            \n        }\n    },\n\n    onPushStartBet(resp){\n        try {\n            this.startBets = true;\n            let expired = resp.expired/1000\n            this.betsTime = expired;\n            if (!this.selfNodeCtrl.isBanker){\n                this.selfNodeCtrl.showMenu = true;\n            }\n        } catch (error) {\n            \n        }\n    },\n\n    onPushShowCards(resp){\n        try {\n            this.startBets = false;\n\n            let users = resp.users;\n            for (let u of users){\n                if (u.uid != playerObj.uid){\n                    let playerCtrl = this.getPlayerNode(this.inRoomUserMap.get(u.uid)).getComponent(\"PlayerCtrl\");\n                    playerCtrl.hands = u.cards\n                }\n            }\n\n            this.openHands();\n        } catch (error) {\n            \n        }\n    },\n\n    initGame(){\n        for (let s of this.seats){\n            s.active = false;\n        }\n    },\n\n    /**\n     * 获取发牌顺序（座位号), 从庄家开始逆时针发牌\n     * @return {Array}\n     */\n    getDealSeatOrder(){\n        let order = [];\n        let tmp = this.bankerSeat;\n        while (tmp <= 4){\n            if (this.seats[tmp].active){\n                order.push(tmp);\n            }\n            tmp++;\n        }\n        tmp = 0;\n        while (tmp < this.bankerSeat){\n            if (this.seats[tmp].active){\n                order.push(tmp);\n            }\n            tmp++;\n        }\n\n        return order;\n    },\n\n    /**\n     * 清理游戏，方便开始下一局\n     */\n    cleanGame(){\n        for (let i = 0; i<5; i++){\n            let p = this.getPlayerNode(i).getComponent(\"PlayerCtrl\");\n            p.clearHands();\n        }\n    },\n\n    /**\n     * 通过座位号获取对应玩家节点\n     * @param seatIndex\n     * @return {cc.Node}\n     */\n    getPlayerNode(seatIndex){\n        console.log(seatIndex)\n        cc.assert(seatIndex >= 0 && seatIndex <= 4, \"wrong seatIndex!\");\n        return this.seats[seatIndex].getChildByName(\"PlayerNode\");\n    },\n\n    startGame(){\n        // 金币不足无法继续\n        if (GlobalNiuNiu.dataMgr.playerObj.coins < this.mult * 100 * 4){\n            Dialog.show(\"金币不足\" + this.mult * 50 * 4 + \"，请充值.\", null, \"确定\", null, ()=>{\n                GlobalNiuNiu.loadScene(\"Lobby\");\n            });\n            return;\n        }\n\n        this.getPlayerNode(this.bankerSeat).getComponent(\"PlayerCtrl\").isBanker = true;\n        // this.selfNodeCtrl.showReadyState = false;\n        this.scheduleOnce(()=>{\n            if (GlobalNiuNiu.config.GAME_MODE < 5){\n                // 下发牌后下注\n                this.startDeal(GlobalNiuNiu.config.GAME_MODE, ()=>{\n                    // this.startBetDown();\n                });\n            } else {\n                // 先下注后发牌\n                // this.startBetDown();\n            }\n        }, 1);\n    },\n\n    /**\n     * 开始下注\n     */\n    startBetDown(){\n        Toast.showText(\"请开始下注.\", 1, ()=>{\n            this.startBets = true;\n            this.betsTime = GlobalNiuNiu.config.BETS_WAITING;\n            this.robotDown();\n        });\n        GlobalNiuNiu.audioMgr.playEffect(GlobalNiuNiu.audioMgr.effMdls);\n        this.selfNodeCtrl.showMenu = !this.selfNodeCtrl.isBanker;\n    },\n\n    /**\n     * 给机器下注\n     */\n    robotDown(){\n        // 自动给机器人下注\n        let orders = this.getDealSeatOrder();\n        for(let i = 0; i < orders.length; i ++){\n            let seat = orders[i];\n            let player = this.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\n\n            if (seat === 2 || player.isBanker) continue;\n\n            // 机器人自动加钱\n            if (player.coins < this.mult * 100 * 4){\n                player.coins = 100000;\n            }\n            player.payBet(-1, Math.random() + 0.5);\n        }\n    },\n\n    /**\n     * 开始发牌\n     * @param count{Number} 发牌张数\n     * @param cb{function} 回调函数\n     */\n    startDeal(count, cb){\n        cc.log(\"开始发牌.\" + count + \"张.\");\n        let t = 0;\n        if (count > 0){\n            let self = this;\n            let zIndex = GlobalNiuNiu.config.LOCAL_ZINDEX_MAX;\n            let root = self.cardHeapSeat.parent;\n            let order = this.getDealSeatOrder();\n\n            // 只有自己的牌是服务器发来的，其他玩家的只是动画\n            if (this.cardsArr.length < count * 5){\n                cc.log(\"牌不够，洗牌.\");\n                this.cardsArr = create1pairPoker(true);\n            }\n\n            for (let seat of order){\n                let cards = this.cardsArr.slice(0, count);\n                sortBig2Samll(cards);\n                this.cardsArr = this.cardsArr.slice(count);\n                _dealAct(seat, cards);\n            }\n\n            // 执行发牌并展示动画\n            function _dealAct(seat, cards) {\n                let playerCtrl = self.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\n                if (seat == 2){\n                    // 自己的座位肯定是2\n                    cards = self._serverCards;\n                }\n                for (let i=0; i<cards.length; i++){\n                    let cardObj = cards[i];\n                    playerCtrl.hands.push(cardObj); // 发牌给玩家\n                    let card = cc.instantiate(GlobalNiuNiu.assetMgr.cardPrefab);\n                    card.getComponent(\"CardCtrl\").initCard(cardObj.point, cardObj.suit, false);\n                    card.scale = 0.5;\n                    card.zIndex = zIndex;\n                    let posOri = root.convertToNodeSpaceAR(root.convertToWorldSpaceAR(self.cardHeapSeat.getPosition()));\n                    let posDes = root.convertToNodeSpaceAR(playerCtrl.cardPanelLeft.convertToWorldSpaceAR(cc.v2(0,0)));\n                    root.addChild(card);\n                    card.setPosition(posOri);\n                    card.runAction(cc.sequence(cc.delayTime(t), cc.moveTo(0.1,posDes), cc.callFunc(()=>{\n                        card.removeFromParent(true);\n                        card.x = card.y = 0;\n                        card.scale = 1;\n                        card.getComponent(\"CardCtrl\").showFace = seat === 2;\n                        playerCtrl.cardPanelLeft.addChild(card);\n                        GlobalNiuNiu.audioMgr.playEffect(GlobalNiuNiu.audioMgr.effFapai);\n                    })));\n\n                    t += 0.1;\n                    zIndex --;\n                }\n            }\n        }\n\n        if (cb){\n            this.scheduleOnce(cb, t + 0.5);\n        }\n    },\n\n    // 开牌比较大小\n    openHands(){\n        cc.log(\"开始开牌\");\n        GlobalNiuNiu.audioMgr.playEffect(GlobalNiuNiu.audioMgr.effKaipai);\n\n        Toast.showText(\"开牌!\", 1, ()=>{\n            let orders = this.getDealSeatOrder();\n            let t = 0.6;\n            for (let i=0; i<orders.length; i++){\n                let seat = orders[i];\n                this.getPlayerNode(seat).getComponent(\"PlayerCtrl\").openHands(t * i);\n            }\n\n            this.scheduleOnce(this.countReward, t * orders.length);\n        });\n    },\n\n    /**\n     *  计算牌型倍数\n     * @param typeReturn{TypeReturn}\n     * 牛牛 this.mult倍，牛9减一倍，牛8减二倍，直到剩余一倍\n     */\n    countMult(typeReturn){\n        if (this.mult <= 1) return 1;\n        let mult = 1;\n        if (typeReturn.handsType === HandsType.TYPE_NONE){\n            mult = 1;\n        }  else {\n            mult = this.mult + (typeReturn.handsType - HandsType.TYPE_NIUNIU);\n        }\n\n        mult = Math.max(mult, 1);\n        if(typeReturn.handsType === HandsType.TYPE_NONE){\n            mult = 2;\n        }\n        return mult;\n    },\n\n    // 结算\n    countReward(){\n        cc.log(\"结算\");\n        let banker = this.getPlayerNode((this.bankerSeat)).getComponent(\"PlayerCtrl\");\n        let bankerType = banker.typeReturn;\n        let bankerReward = 0;\n\n        // let orders = this.getDealSeatOrder();\n        // orders.splice(0,1);\n        // for (let seat of orders){\n        //     let player = this.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\n        //     let pType = player.typeReturn;\n        //     if (pType.handsType === HandsType.TYPE_NIUNIU){\n        //         this.nextBankerSeat = seat;\n        //     }\n        //     if (compareHandsReturn(bankerType, pType)){\n        //         // 庄家赢\n        //         let multi = this.countMult(bankerType);\n        //         bankerReward += player.curBets * multi;\n        //         player.addReward(-player.curBets * multi);\n\n        //     } else {\n        //         // 闲家赢\n        //         let multi = this.countMult(pType);\n        //         bankerReward -= player.curBets * multi;\n        //         player.addReward(player.curBets * multi);\n        //     }\n        // }\n        // banker.addReward(bankerReward);\n\n        // GlobalNiuNiu.dataMgr.playerObj.coins = this.selfNodeCtrl.coins;\n        // GlobalNiuNiu.dataMgr.saveDataToLocal();\n\n        this.scheduleOnce(()=>{\n            if (GlobalNiuNiu.config.ONLINE_MODE){\n                // 开始下一局\n                let isBanker = this.selfNodeCtrl.isBanker;\n                this.cleanGame();\n                this.selfNodeCtrl.isBanker = isBanker;\n                if (this.selfNodeCtrl.isBanker){\n                    this.selfNodeCtrl.showStart = true;\n                }else{\n                    this.selfNodeCtrl.showReady = true;\n                }\n                this.selfNodeCtrl.showQuit = true;\n            } else {\n                // 开始下一局\n                Dialog.show(\"继续玩？\", \"取消\", \"确定\", ()=>{\n                    GlobalNiuNiu.loadScene(\"Lobby\");\n                }, ()=>{\n                    this.cleanGame();\n                    this.bankerSeat = this.nextBankerSeat;\n                    this.startGame();\n                });\n            }\n        }, 1.5);\n    },\n    openWebView(){\n        this.webview.active = true;\n    },\n    closeWebView(){\n        this.webview.active = false;\n    },\n    myUpdate (dt) {\n        if (!this.startBets){\n            this.betTimeLabel.node.parent.active = false;\n            return;\n        }\n\n        this.betTimeLabel.string = Math.ceil(this.betsTime);\n        this.betsTime--;\n        if (Math.ceil(this.betsTime) > 0){\n            this.betTimeLabel.node.parent.active = true;\n        } else {\n            // 超时自动下注最小bet\n            this.startBets = false;\n            this.betTimeLabel.node.parent.active = false;\n            this.selfNodeCtrl.showMenu = false;\n        }\n\n    },\n    onDestroy(){\n        // GlobalNiuNiu.netProxy.offPush(\"gameReady\", this.onReady, this);\n        // GlobalNiuNiu.netProxy.offPush(\"countReward\", this.onCountRewardResponse, this);\n        // GlobalNiuNiu.netProxy.offPush(\"pEnterRoom\", this.onOtherUserEnterRoom, this);\n        // GlobalNiuNiu.netProxy.offPush(\"pExitRoom\", this.onOtherUserExitRoom, this);\n        // GlobalNiuNiu.netProxy.offPush(\"ChangeBanker\", this.onChangeBanker, this);\n        // GlobalNiuNiu.netProxy.offPush(\"pDeal\", this.onPushDeal, this);\n        // GlobalNiuNiu.netProxy.offPush(\"pBet\", this.onPushUserBet, this);\n        // GlobalNiuNiu.netProxy.offPush(\"pStartBet\", this.onPushStartBet, this);\n        // GlobalNiuNiu.netProxy.offPush(\"pShowCards\", this.onPushShowCards, this);\n    }\n});\n"]}