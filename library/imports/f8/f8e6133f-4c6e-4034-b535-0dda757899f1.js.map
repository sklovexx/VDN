{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\NiuNiu\\script\\common/assets\\NiuNiu\\script\\common\\one-side-platform.js"],"names":["PenetrateSide","cc","Enum","UP_TO_DOWN","DOWN_TO_UP","LEFT_TO_RIGHT","RIGHT_TO_LEFT","Class","extends","Component","properties","penetrateSide","tooltip","type","default","onLoad","pointVelPlatform","v2","pointVelOther","relativeVel","relativePoint","onBeginContact","contact","selfCollider","otherCollider","cache","_pointsCache","otherBody","body","platformBody","worldManifold","getWorldManifold","points","i","length","getLinearVelocityFromWorldPoint","getLocalVector","subSelf","y","getLocalPoint","platformFaceY","getAABB","height","x","log","platformFaceX","width","disabled"],"mappings":"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","file":"one-side-platform.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\NiuNiu\\script\\common","sourcesContent":["// http://www.iforce2d.net/b2dtut/one-way-walls\n// 物理系统，单面穿透，其他面碰撞\n\nlet PenetrateSide = cc.Enum({\n    UP_TO_DOWN: 1,\n    DOWN_TO_UP: 2,\n    LEFT_TO_RIGHT: 3,\n    RIGHT_TO_LEFT: 4\n});\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        penetrateSide: {\n            tooltip: \"穿透方向\",\n            type: PenetrateSide,\n            default: PenetrateSide.DOWN_TO_UP\n        }\n    },\n\n    onLoad: function () {\n        this.pointVelPlatform = cc.v2();\n        this.pointVelOther = cc.v2();\n        this.relativeVel = cc.v2();\n        this.relativePoint = cc.v2();\n    },\n\n    onBeginContact: function (contact, selfCollider, otherCollider) {\n        let cache = this._pointsCache;\n\n        let otherBody = otherCollider.body;\n        let platformBody = selfCollider.body;\n\n        let worldManifold = contact.getWorldManifold();\n        let points = worldManifold.points;\n\n        let pointVelPlatform = this.pointVelPlatform;\n        let pointVelOther = this.pointVelOther;\n        let relativeVel = this.relativeVel;\n        let relativePoint = this.relativePoint;\n\n        //check if contact points are moving into platform\n        for (let i = 0; i < points.length; i++) {\n            platformBody.getLinearVelocityFromWorldPoint( points[i], pointVelPlatform );\n            otherBody.getLinearVelocityFromWorldPoint( points[i], pointVelOther );\n            platformBody.getLocalVector( pointVelOther.subSelf(pointVelPlatform), relativeVel );\n\n            // 原始代码（只有从下往上穿透，即 PenetrateSide.DOWN_TO_UP)\n            if (this.penetrateSide === PenetrateSide.DOWN_TO_UP){\n                if ( relativeVel.y < -32 ) //if moving down faster than 32 pixel/s (1m/s), handle as before\n                    return;  //point is moving into platform, leave contact solid and exit\n                else if ( relativeVel.y < 32 ) { //if moving slower than 32 pixel/s (1m/s)\n                    //borderline case, moving only slightly out of platform\n                    platformBody.getLocalPoint( points[i], relativePoint );\n                    let platformFaceY = selfCollider.getAABB().height / 2;  //front of platform, should only used on a box collider\n                    if ( relativePoint.y > platformFaceY - 0.1*32 )\n                        return;  //contact point is less than 3.2pixel (10cm) inside front face of platfrom\n                }\n                else {\n                    //moving up faster than 1 m/s\n                }\n            } else if (this.penetrateSide === PenetrateSide.UP_TO_DOWN){\n                if ( relativeVel.y > 32 ) //if moving up faster than 32 pixel/s (1m/s), handle as before\n                    return;  //point is moving into platform, leave contact solid and exit\n                else if ( relativeVel.y < -32 ) { //if moving slower than 32 pixel/s (1m/s)\n                    //borderline case, moving only slightly out of platform\n                    platformBody.getLocalPoint( points[i], relativePoint );\n                    let platformFaceY = selfCollider.getAABB().height / 2;  //front of platform, should only used on a box collider\n                    if ( relativePoint.y < platformFaceY - 0.1*32 )\n                        return;  //contact point is less than 3.2pixel (10cm) inside front face of platfrom\n                }\n                else {\n                    //moving up faster than 1 m/s\n                }\n            } else if (this.penetrateSide === PenetrateSide.LEFT_TO_RIGHT) {\n                if (relativeVel.x < -32) //if moving down faster than 32 pixel/s (1m/s), handle as before\n                    return;  //point is moving into platform, leave contact solid and exit\n                else if (relativeVel.x < 32) { //if moving slower than 32 pixel/s (1m/s)\n                    cc.log(\"===-=-=-=\");\n                    //borderline case, moving only slightly out of platform\n                    platformBody.getLocalPoint(points[i], relativePoint);\n                    let platformFaceX = selfCollider.getAABB().width / 2;  //front of platform, should only used on a box collider\n                    if (relativePoint.x > platformFaceX - 0.1 * 32)\n                        return;  //contact point is less than 3.2pixel (10cm) inside front face of platfrom\n                }\n                else {\n                    //moving up faster than 1 m/s\n                }\n\n            } else if (this.penetrateSide === PenetrateSide.RIGHT_TO_LEFT){\n                if ( relativeVel.x > 32 ) //if moving up faster than 32 pixel/s (1m/s), handle as before\n                    return;  //point is moving into platform, leave contact solid and exit\n                else if ( relativeVel.x < -32 ) { //if moving slower than 32 pixel/s (1m/s)\n                    //borderline case, moving only slightly out of platform\n                    platformBody.getLocalPoint( points[i], relativePoint );\n                    let platformFaceX = selfCollider.getAABB().width / 2;  //front of platform, should only used on a box collider\n                    if ( relativePoint.x < platformFaceX - 0.1*32 )\n                        return;  //contact point is less than 3.2pixel (10cm) inside front face of platfrom\n                }\n                else {\n                    //moving up faster than 1 m/s\n                }\n            }\n\n        }\n\n        // store disabled state to contact\n        contact.disabled = true;\n    },\n\n    // called every frame, uncomment this function to activate update callback\n    // update: function (dt) {\n\n    // },\n});\n\n\n\n"]}