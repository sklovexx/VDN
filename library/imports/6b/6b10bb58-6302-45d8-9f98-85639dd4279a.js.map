{"version":3,"sources":["..\\..\\..\\..\\..\\..\\assets\\NiuNiu\\script\\common/assets\\NiuNiu\\script\\common\\ScrollViewFixed.js"],"names":["cc","Class","extends","ScrollView","properties","maxBounceDistance","tooltip","default","v2","rate","max","min","_registerEvent","_moveContent","deltaMove","canStartBounceBack","adjustedMove","_flattenVectorByDirection","scaleFactor","director","getContentScaleFactor","newPosition","pAdd","getContentPosition","maxOffset","getMaxScrollOffset","x","y","setContentPosition","outOfBoundary","_getHowMuchOutOfBoundary","_updateScrollBar","elastic","_startBounceBackIfNeeded","_handleMoveLogic","touch","getDelta","_processDeltaMove","pMult"],"mappings":";;;;AAAA;;;;;AAKA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,UADP;AAELC,gBAAW;AACPC,2BAAkB;AACdC,qBAAS,YADK;AAEdC,qBAASP,GAAGQ,EAAH,CAAM,GAAN,EAAU,GAAV;AAFK,SADX;AAKPC,cAAM;AACFH,qBAAS,2BADP;AAEFC,qBAAS,CAFP;AAGFG,iBAAK,CAHH;AAIFC,iBAAK;AAJH;AALC,KAFN;;AAeL;AACAC,kBAhBK,4BAgBW,CACf,CAjBI;AAmBLC,gBAnBK,wBAmBQC,SAnBR,EAmBmBC,kBAnBnB,EAmBuC;AACxC,YAAIC,eAAe,KAAKC,yBAAL,CAA+BH,SAA/B,CAAnB;AACA,YAAII,cAAclB,GAAGmB,QAAH,CAAYC,qBAAZ,EAAlB;AACAF,sBAAc,CAAd;;AAEA,YAAIG,cAAcrB,GAAGsB,IAAH,CAAQ,KAAKC,kBAAL,EAAR,EAAmCP,YAAnC,CAAlB;AACA,YAAIQ,YAAY,KAAKC,kBAAL,EAAhB;;AAEAJ,oBAAYK,CAAZ,GAAgBL,YAAYK,CAAZ,IAAgB,CAACF,UAAUE,CAAX,GAAa,CAAb,GAAe,KAAKrB,iBAAL,CAAuBqB,CAAvB,GAA2BR,WAA1D,GAAuEG,YAAYK,CAAnF,GAAsF,CAACF,UAAUE,CAAX,GAAa,CAAb,GAAe,KAAKrB,iBAAL,CAAuBqB,CAAvB,GAA2BR,WAAhJ;AACAG,oBAAYK,CAAZ,GAAgBL,YAAYK,CAAZ,IAAgBF,UAAUE,CAAV,GAAY,CAAZ,GAAc,KAAKrB,iBAAL,CAAuBqB,CAAvB,GAA2BR,WAAzD,GAAsEG,YAAYK,CAAlF,GAAqFF,UAAUE,CAAV,GAAY,CAAZ,GAAc,KAAKrB,iBAAL,CAAuBqB,CAAvB,GAA2BR,WAA9I;AACAG,oBAAYM,CAAZ,GAAgBN,YAAYM,CAAZ,IAAgB,CAACH,UAAUG,CAAX,GAAa,CAAb,GAAe,KAAKtB,iBAAL,CAAuBqB,CAAvB,GAA2BR,WAA1D,GAAuEG,YAAYM,CAAnF,GAAsF,CAACH,UAAUG,CAAX,GAAa,CAAb,GAAe,KAAKtB,iBAAL,CAAuBqB,CAAvB,GAA2BR,WAAhJ;AACAG,oBAAYM,CAAZ,GAAgBN,YAAYM,CAAZ,IAAgBH,UAAUG,CAAV,GAAY,CAAZ,GAAc,KAAKtB,iBAAL,CAAuBqB,CAAvB,GAA2BR,WAAzD,GAAsEG,YAAYM,CAAlF,GAAqFH,UAAUG,CAAV,GAAY,CAAZ,GAAc,KAAKtB,iBAAL,CAAuBqB,CAAvB,GAA2BR,WAA9I;;AAEA,aAAKU,kBAAL,CAAwBP,WAAxB;;AAEA,YAAIQ,gBAAgB,KAAKC,wBAAL,EAApB;AACA,aAAKC,gBAAL,CAAsBF,aAAtB;;AAEA,YAAI,KAAKG,OAAL,IAAgBjB,kBAApB,EAAwC;AACpC,iBAAKkB,wBAAL;AACH;AACJ,KAxCI;;;AA0CLC,sBAAkB,0BAASC,KAAT,EAAgB;AAC9B,YAAIrB,YAAYqB,MAAMC,QAAN,EAAhB;AACA,aAAKC,iBAAL,CAAuBrC,GAAGsC,KAAH,CAASxB,SAAT,EAAoB,KAAKL,IAAzB,CAAvB;AACH;;AA7CI,CAAT","file":"ScrollViewFixed.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\NiuNiu\\script\\common","sourcesContent":["/**\r\n * 修改系统ScrollView，去除本身触摸事件，增加设置滚动越界距离\r\n * 触摸事件由外部传递过去（touchstart touchmove touchend touchcancle)\r\n */\r\n\r\n\"use strict\";\r\n\r\ncc.Class({\r\n    extends: cc.ScrollView,\r\n    properties:{\r\n        maxBounceDistance:{\r\n            tooltip: \"允许超过边界的最大值\",\r\n            default: cc.v2(100,100)\r\n        },\r\n        rate: {\r\n            tooltip: \"移动速率(0-1), 1表示跟随手指, 0表示不动\",\r\n            default: 1,\r\n            max: 1,\r\n            min: 0\r\n        },\r\n    },\r\n\r\n    // mark 取消自身的触摸事件\r\n    _registerEvent(){\r\n    },\r\n\r\n    _moveContent(deltaMove, canStartBounceBack) {\r\n        let adjustedMove = this._flattenVectorByDirection(deltaMove);\r\n        let scaleFactor = cc.director.getContentScaleFactor();\r\n        scaleFactor = 1;\r\n\r\n        let newPosition = cc.pAdd(this.getContentPosition(), adjustedMove);\r\n        let maxOffset = this.getMaxScrollOffset();\r\n\r\n        newPosition.x = newPosition.x>=(-maxOffset.x/2-this.maxBounceDistance.x * scaleFactor)?newPosition.x:(-maxOffset.x/2-this.maxBounceDistance.x * scaleFactor);\r\n        newPosition.x = newPosition.x<=(maxOffset.x/2+this.maxBounceDistance.x * scaleFactor)?newPosition.x:(maxOffset.x/2+this.maxBounceDistance.x * scaleFactor);\r\n        newPosition.y = newPosition.y>=(-maxOffset.y/2-this.maxBounceDistance.x * scaleFactor)?newPosition.y:(-maxOffset.y/2-this.maxBounceDistance.x * scaleFactor);\r\n        newPosition.y = newPosition.y<=(maxOffset.y/2+this.maxBounceDistance.x * scaleFactor)?newPosition.y:(maxOffset.y/2+this.maxBounceDistance.x * scaleFactor);\r\n\r\n        this.setContentPosition(newPosition);\r\n\r\n        var outOfBoundary = this._getHowMuchOutOfBoundary();\r\n        this._updateScrollBar(outOfBoundary);\r\n\r\n        if (this.elastic && canStartBounceBack) {\r\n            this._startBounceBackIfNeeded();\r\n        }\r\n    },\r\n\r\n    _handleMoveLogic: function(touch) {\r\n        let deltaMove = touch.getDelta();\r\n        this._processDeltaMove(cc.pMult(deltaMove, this.rate));\r\n    }\r\n\r\n});"]}