{"version":3,"sources":["Toast.js"],"names":["BGRES_FILE","Toast","LENGTH_LONG","LENGTH_SHORT","CENTER","TOP","TOP_LEFT","LEFT","BOTTOM_LEFT","BOTTOM","BOTTOM_RIGHT","RIGHT","TOP_RIGHT","ToastView","cc","Class","ctor","_text","_duration","_gravity","show","str","tDuration","gravity","self","bgSpriteFrame","undefined","loader","loadRes","SpriteFrame","error","spf","insetTop","insetBottom","insetLeft","insetRight","canvas","director","getScene","getComponentInChildren","Canvas","width","node","height","bgNode","Node","opacity","color","Color","BLACK","bgSprite","addComponent","Sprite","type","Type","SLICED","bgLayout","Layout","resizeMode","ResizeMode","CONTAINER","textNode","textLabel","Label","horizontalAlign","HorizontalAlign","verticalAlign","VerticalAlign","fontSize","string","hPadding","vPadding","paddingLeft","paddingRight","paddingTop","paddingBottom","length","overflow","Overflow","RESIZE_HEIGHT","addChild","spriteFrame","y","x","finishCall","callFunc","target","destroy","action","sequence","delayTime","fadeOut","runAction","showText","txt","duration","toast","module","exports"],"mappings":"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","file":"Toast.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\NiuNiu\\script\\common","sourcesContent":["/**\n * Created by skyxu on 2019/4/28.\n *\n * 需要在assets/resources文件夹下添加一个2x2的纯白图片 singleColor.png用作底图\n *\n */\n\n\"use strict\";\n\nconst BGRES_FILE = \"singleColor\";\n\nlet Toast = {\n    LENGTH_LONG: 3.5,\n    LENGTH_SHORT: 2,\n    CENTER: 0,\n    TOP: 1,\n    TOP_LEFT: 2,\n    LEFT: 3,\n    BOTTOM_LEFT: 4,\n    BOTTOM: 5,\n    BOTTOM_RIGHT: 6,\n    RIGHT: 7,\n    TOP_RIGHT: 8,\n};\n\nlet ToastView = cc.Class({\n    ctor(){\n        this._text = \"\";\n        this._duration = 0;\n        this._gravity = Toast.CENTER;\n    },\n\n    show(str, tDuration, gravity){\n        this._text = str;\n        this._duration = tDuration;\n        this._gravity = gravity;\n\n        let self = this;\n        // 加载背景纹理\n        if (Toast.bgSpriteFrame == undefined) {\n            (function () {\n                cc.loader.loadRes(BGRES_FILE, cc.SpriteFrame, (error, spf)=>{\n                    if (error) {\n                        cc.error(error);\n                        return;\n                    }\n                    Toast.bgSpriteFrame = spf;\n                    Toast.bgSpriteFrame.insetTop = 3;\n                    Toast.bgSpriteFrame.insetBottom = 3;\n                    Toast.bgSpriteFrame.insetLeft = 4;\n                    Toast.bgSpriteFrame.insetRight = 4;\n                    //加载完再调用\n                    self.show(str, tDuration, gravity);\n                });\n            })();\n            return;\n        }\n\n        // canvas\n        let canvas = cc.director.getScene().getComponentInChildren(cc.Canvas);\n        let width = canvas.node.width;\n        let height = canvas.node.height;\n        if (this._duration === undefined) {\n            this._duration = Toast.LENGTH_SHORT;\n        }\n        // 背景图片设置\n        let bgNode = new cc.Node();\n        // 背景图片透明度\n        bgNode.opacity = 240;\n        bgNode.color = cc.Color.BLACK;\n        let bgSprite = bgNode.addComponent(cc.Sprite);\n        bgSprite.type = cc.Sprite.Type.SLICED;\n        let bgLayout = bgNode.addComponent(cc.Layout);\n        bgLayout.resizeMode = cc.Layout.ResizeMode.CONTAINER;\n\n        // Lable文本格式设置\n        let textNode = new cc.Node();\n        let textLabel = textNode.addComponent(cc.Label);\n        textLabel.horizontalAlign = cc.Label.HorizontalAlign.CENTER;\n        textLabel.verticalAlign = cc.Label.VerticalAlign.CENTER;\n        textLabel.fontSize = 30;\n        textLabel.string = this._text;\n\n        //背景图片与文本内容的间距\n        let hPadding = textLabel.fontSize / 8;\n        let vPadding = 2;\n        bgLayout.paddingLeft = hPadding;\n        bgLayout.paddingRight = hPadding;\n        bgLayout.paddingTop = vPadding;\n        bgLayout.paddingBottom = vPadding;\n\n        // 当文本宽度过长时，设置为自动换行格式\n        if (this._text.length * textLabel.fontSize > width / 3 * 2) {\n            textNode.width = width / 3 * 2;\n            textLabel.overflow = cc.Label.Overflow.RESIZE_HEIGHT;\n        }\n\n        bgNode.addChild(textNode);\n        if (Toast.bgSpriteFrame) {\n            bgSprite.spriteFrame = Toast.bgSpriteFrame;\n        }\n\n        // gravity 设置Toast显示的位置\n        if (this._gravity == Toast.CENTER) {\n            textNode.y = 0;\n            textNode.x = 0;\n        } else if (this._gravity == Toast.TOP) {\n            textNode.y = textNode.y + (height / 5) * 2;\n        } else if (this._gravity == Toast.TOP_LEFT) {\n            textNode.y = textNode.y + (height / 5) * 2;\n            textNode.x = textNode.x + (width / 5);\n        } else if (this._gravity == Toast.LEFT) {\n            textNode.x = textNode.x + (width / 5);\n        } else if (this._gravity == Toast.BOTTOM_LEFT) {\n            textNode.y = textNode.y - (height / 5) * 2;\n            textNode.x = textNode.x + (width / 5);\n        } else if (this._gravity == Toast.BOTTOM) {\n            textNode.y = textNode.y - (height / 5) * 2;\n        } else if (this._gravity == Toast.BOTTOM_RIGHT) {\n            textNode.y = textNode.y - (height / 5) * 2;\n            textNode.x = textNode.x - (width / 5);\n        } else if (this._gravity == Toast.RIGHT) {\n            textNode.x = textNode.x - (width / 5);\n        } else if (this._gravity == Toast.TOP_RIGHT) {\n            textNode.y = textNode.y + (height / 5) * 2;\n            textNode.x = textNode.x - (width / 5);\n        } else {\n            // 默认情况 BOTTOM\n            textNode.y = textNode.y - (height / 5) * 2;\n        }\n\n        // textNode.x = textNode.x + _x;\n        // textNode.y = textNode.y + _y;\n\n        canvas.node.addChild(bgNode);\n\n        let finishCall = cc.callFunc((target)=>{\n            bgNode.destroy();\n        }, self);\n        let action = cc.sequence(cc.delayTime(this._duration), cc.fadeOut(0.3), finishCall);\n        bgNode.runAction(action);\n    }\n});\n\nToast.showText = function (txt, duration, gravity) {\n    let toast = new ToastView();\n    toast.show(txt, duration, gravity);\n};\n\nmodule.exports = Toast;\n"]}