{"version":3,"sources":["RoomCtrl.js"],"names":["Utils","require","Toast","Dialog","playerObj","getInstance","cc","Class","extends","Component","properties","seats","Node","cardHeapSeat","multLabel","Label","mult","default","type","Integer","min","max","notify","string","betTimeLabel","onLoad","selfNodeCtrl","getPlayerNode","getComponent","startBets","bankerSeat","cardsArr","nextBankerSeat","GlobalNiuNiu","config","ROOM_MULT","node","parent","active","start","schedule","myUpdate","initGame","startGame","audioMgr","playMusic","gameMusic","names","i","index","randomInteger","length","name","splice","coins","initPlayer","initPlayerWithData","create1pairPoker","getDealSeatOrder","order","tmp","push","cleanGame","p","clearHands","seatIndex","assert","getChildByName","dataMgr","show","loadScene","isBanker","scheduleOnce","GAME_MODE","startDeal","startBetDown","showText","betsTime","BETS_WAITING","robotDown","playEffect","effMdls","showMenu","orders","seat","player","payBet","Math","random","count","cb","log","t","_dealAct","cards","playerCtrl","self","cardObj","hands","card","instantiate","assetMgr","cardPrefab","initCard","point","suit","scale","zIndex","posOri","root","convertToNodeSpaceAR","convertToWorldSpaceAR","getPosition","posDes","cardPanelLeft","v2","addChild","setPosition","runAction","sequence","delayTime","moveTo","callFunc","removeFromParent","x","y","showFace","effFapai","LOCAL_ZINDEX_MAX","slice","sortBig2Samll","openHands","effKaipai","countReward","countMult","typeReturn","handsType","HandsType","TYPE_NONE","TYPE_NIUNIU","banker","bankerType","bankerReward","pType","compareHandsReturn","multi","curBets","addReward","saveDataToLocal","dt","ceil","allOk","onBtnDown","cardCounts"],"mappings":"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","file":"RoomCtrl.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\NiuNiu\\script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\nlet Utils = require(\"./common/UtilsOther\");\r\nlet Toast = require(\"./views/ToastCtrl\");\r\nlet Dialog = require(\"./views/DialogCtrl\");\r\nlet playerObj = require(\"./common/DataMgr\").getInstance().playerObj;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        seats:[cc.Node],\r\n        cardHeapSeat: cc.Node,\r\n        multLabel: cc.Label,\r\n        mult: {\r\n            default: 1,\r\n            type: cc.Integer,\r\n            min: 1,\r\n            max: 50,\r\n            notify(){\r\n                this.multLabel.string = this.mult + \"倍场\";\r\n            }\r\n        },\r\n        betTimeLabel: cc.Label,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        // 自己在正中间,座位号为2\r\n        this.selfNodeCtrl = this.getPlayerNode(2).getComponent(\"PlayerCtrl\");\r\n        this.startBets = false;  // 开始下注\r\n        this.bankerSeat = -1;    // 庄家座位号\r\n        this.cardsArr = [];      // 当前牌堆\r\n        this.nextBankerSeat = -1;    // 下一个庄家\r\n        this.mult = GlobalNiuNiu.config.ROOM_MULT;\r\n        this.betTimeLabel.node.parent.active = false;\r\n    },\r\n\r\n    start () {\r\n        this.schedule(this.myUpdate, 0.1);\r\n        this.initGame();\r\n        this.startGame();\r\n\r\n        GlobalNiuNiu.audioMgr.playMusic(GlobalNiuNiu.audioMgr.gameMusic);\r\n    },\r\n\r\n    initGame(){\r\n        let names = [\"玛利亚\", \"波多\", \"吉野君\", \"椎名空\", \"筱田步美\", \"佐佐木明希\", \"高桥圣子\", \"三上悠亚\", \"水野朝阳\"];\r\n        // 随机4个玩家, 中间座位为自己\r\n        for(let i=0; i<5; i++){\r\n            if (i != 2){\r\n                let index = Utils.randomInteger(0, names.length-1);\r\n                let name = names[index];\r\n                names.splice(index,1);\r\n                let coins = 100000;\r\n                this.getPlayerNode(i).getComponent(\"PlayerCtrl\").initPlayer(name, null, coins);\r\n            }\r\n        }\r\n\r\n        // 初始化自己\r\n        this.selfNodeCtrl.initPlayerWithData(playerObj);\r\n\r\n        // 开局随机一个庄家\r\n        this.bankerSeat = this.nextBankerSeat = Utils.randomInteger(0,4);\r\n\r\n        // 初始化牌堆\r\n        this.cardsArr = create1pairPoker(true);\r\n\r\n    },\r\n\r\n    /**\r\n     * 获取发牌顺序（座位号), 从庄家开始逆时针发牌\r\n     * @return {Array}\r\n     */\r\n    getDealSeatOrder(){\r\n        let order = [];\r\n        let tmp = this.bankerSeat;\r\n        while (tmp <= 4){\r\n            order.push(tmp++);\r\n        }\r\n        tmp = 0;\r\n        while (tmp < this.bankerSeat){\r\n            order.push(tmp++);\r\n        }\r\n\r\n        return order;\r\n    },\r\n\r\n    /**\r\n     * 清理游戏，方便开始下一局\r\n     */\r\n    cleanGame(){\r\n        for (let i = 0; i<5; i++){\r\n            let p = this.getPlayerNode(i).getComponent(\"PlayerCtrl\");\r\n            p.clearHands();\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param seatIndex\r\n     * @return {cc.Node}\r\n     */\r\n    getPlayerNode(seatIndex){\r\n        cc.assert(seatIndex >= 0 && seatIndex <= 4, \"wrong seatIndex!\");\r\n        return this.seats[seatIndex].getChildByName(\"PlayerNode\");\r\n    },\r\n\r\n    startGame(){\r\n        // 金币不足无法继续\r\n        if (GlobalNiuNiu.dataMgr.playerObj.coins < this.mult * 100 * 4){\r\n            Dialog.show(\"金币不足\" + this.mult * 50 * 4 + \"，请充值.\", null, \"确定\", null, ()=>{\r\n                GlobalNiuNiu.loadScene(\"Lobby\");\r\n            });\r\n            return;\r\n        }\r\n\r\n        this.getPlayerNode(this.bankerSeat).getComponent(\"PlayerCtrl\").isBanker = true;\r\n\r\n        this.scheduleOnce(()=>{\r\n            if (GlobalNiuNiu.config.GAME_MODE < 5){\r\n                // 下发牌后下注\r\n                this.startDeal(GlobalNiuNiu.config.GAME_MODE, ()=>{\r\n                    this.startBetDown();\r\n                });\r\n            } else {\r\n                // 先下注后发牌\r\n                this.startBetDown();\r\n            }\r\n        }, 1);\r\n    },\r\n\r\n    /**\r\n     * 开始下注\r\n     */\r\n    startBetDown(){\r\n        Toast.showText(\"请开始下注.\", 1, ()=>{\r\n            this.startBets = true;\r\n            this.betsTime = GlobalNiuNiu.config.BETS_WAITING;\r\n            this.robotDown();\r\n        });\r\n        GlobalNiuNiu.audioMgr.playEffect(GlobalNiuNiu.audioMgr.effMdls);\r\n        this.selfNodeCtrl.showMenu = !this.selfNodeCtrl.isBanker;\r\n    },\r\n\r\n    /**\r\n     * 给机器下注\r\n     */\r\n    robotDown(){\r\n        // 自动给机器人下注\r\n        let orders = this.getDealSeatOrder();\r\n        for(let i = 0; i < orders.length; i ++){\r\n            let seat = orders[i];\r\n            let player = this.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\r\n\r\n            if (seat === 2 || player.isBanker) continue;\r\n\r\n            // 机器人自动加钱\r\n            if (player.coins < this.mult * 100 * 4){\r\n                player.coins = 100000;\r\n            }\r\n            player.payBet(-1, Math.random() + 0.5);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 开发发牌\r\n     * @param count{Number} 发牌张数\r\n     * @param cb{function} 回调函数\r\n     */\r\n    startDeal(count, cb){\r\n        cc.log(\"开始发牌.\" + count + \"张.\");\r\n        let t = 0;\r\n        if (count > 0){\r\n            let self = this;\r\n            let zIndex = GlobalNiuNiu.config.LOCAL_ZINDEX_MAX;\r\n            let root = self.cardHeapSeat.parent;\r\n            let order = this.getDealSeatOrder();\r\n\r\n            if (this.cardsArr.length < count * 5){\r\n                cc.log(\"牌不够，洗牌.\");\r\n                this.cardsArr = create1pairPoker(true);\r\n            }\r\n\r\n            for (let seat of order){\r\n                let cards = this.cardsArr.slice(0, count);\r\n                sortBig2Samll(cards);\r\n                this.cardsArr = this.cardsArr.slice(count);\r\n                _dealAct(seat, cards);\r\n            }\r\n\r\n            // 执行发牌并展示动画\r\n            function _dealAct(seat, cards) {\r\n                let playerCtrl = self.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\r\n                for (let i=0; i<cards.length; i++){\r\n                    let cardObj = cards[i];\r\n                    playerCtrl.hands.push(cardObj); // 发牌给玩家\r\n                    let card = cc.instantiate(GlobalNiuNiu.assetMgr.cardPrefab);\r\n                    card.getComponent(\"CardCtrl\").initCard(cardObj.point, cardObj.suit, false);\r\n                    card.scale = 0.5;\r\n                    card.zIndex = zIndex;\r\n                    let posOri = root.convertToNodeSpaceAR(root.convertToWorldSpaceAR(self.cardHeapSeat.getPosition()));\r\n                    let posDes = root.convertToNodeSpaceAR(playerCtrl.cardPanelLeft.convertToWorldSpaceAR(cc.v2(0,0)));\r\n                    root.addChild(card);\r\n                    card.setPosition(posOri);\r\n                    card.runAction(cc.sequence(cc.delayTime(t), cc.moveTo(0.1,posDes), cc.callFunc(()=>{\r\n                        card.removeFromParent(true);\r\n                        card.x = card.y = 0;\r\n                        card.scale = 1;\r\n                        card.getComponent(\"CardCtrl\").showFace = seat === 2;\r\n                        playerCtrl.cardPanelLeft.addChild(card);\r\n                        GlobalNiuNiu.audioMgr.playEffect(GlobalNiuNiu.audioMgr.effFapai);\r\n                    })));\r\n\r\n                    t += 0.1;\r\n                    zIndex --;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.scheduleOnce(cb, t + 0.5);\r\n    },\r\n\r\n    // 开牌比较大小\r\n    openHands(){\r\n        cc.log(\"开始开牌\");\r\n        GlobalNiuNiu.audioMgr.playEffect(GlobalNiuNiu.audioMgr.effKaipai);\r\n\r\n        Toast.showText(\"开牌!\", 1, ()=>{\r\n            let orders = this.getDealSeatOrder();\r\n            let t = 0.6;\r\n            for (let i=0; i<orders.length; i++){\r\n                let seat = orders[i];\r\n                this.getPlayerNode(seat).getComponent(\"PlayerCtrl\").openHands(t * i);\r\n            }\r\n\r\n            this.scheduleOnce(this.countReward, t * orders.length);\r\n        });\r\n    },\r\n\r\n    /**\r\n     *  计算牌型倍数\r\n     * @param typeReturn{TypeReturn}\r\n     * 牛牛 this.mult倍，牛9减一倍，牛8减二倍，直到剩余一倍\r\n     */\r\n    countMult(typeReturn){\r\n        if (this.mult <= 1) return 1;\r\n        let mult = 1;\r\n        if (typeReturn.handsType === HandsType.TYPE_NONE){\r\n            mult = 1;\r\n        }  else {\r\n            mult = this.mult + (typeReturn.handsType - HandsType.TYPE_NIUNIU);\r\n        }\r\n\r\n        mult = Math.max(mult, 1);\r\n        return mult;\r\n    },\r\n\r\n    // 结算\r\n    countReward(){\r\n        cc.log(\"结算\");\r\n        let banker = this.getPlayerNode((this.bankerSeat)).getComponent(\"PlayerCtrl\");\r\n        let bankerType = banker.typeReturn;\r\n        let bankerReward = 0;\r\n\r\n        let orders = this.getDealSeatOrder();\r\n        orders.splice(0,1);\r\n        for (let seat of orders){\r\n            let player = this.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\r\n            let pType = player.typeReturn;\r\n            if (pType.handsType === HandsType.TYPE_NIUNIU){\r\n                this.nextBankerSeat = seat;\r\n            }\r\n            if (compareHandsReturn(bankerType, pType)){\r\n                // 庄家赢\r\n                let multi = this.countMult(bankerType);\r\n                bankerReward += player.curBets * multi;\r\n                player.addReward(-player.curBets * multi);\r\n\r\n            } else {\r\n                // 闲家赢\r\n                let multi = this.countMult(pType);\r\n                bankerReward -= player.curBets * multi;\r\n                player.addReward(player.curBets * multi);\r\n            }\r\n        }\r\n        banker.addReward(bankerReward);\r\n\r\n        GlobalNiuNiu.dataMgr.playerObj.coins = this.selfNodeCtrl.coins;\r\n        GlobalNiuNiu.dataMgr.saveDataToLocal();\r\n\r\n        this.scheduleOnce(()=>{\r\n            // 开始下一局\r\n            Dialog.show(\"继续玩？\", \"取消\", \"确定\", ()=>{\r\n                GlobalNiuNiu.loadScene(\"Lobby\");\r\n            }, ()=>{\r\n                this.cleanGame();\r\n                this.bankerSeat = this.nextBankerSeat;\r\n                this.startGame();\r\n            });\r\n        }, 1.5);\r\n    },\r\n\r\n    myUpdate (dt) {\r\n        if (!this.startBets){\r\n            return;\r\n        }\r\n\r\n        this.betTimeLabel.string = Math.ceil(this.betsTime);\r\n        this.betsTime -= dt;\r\n        if (this.betsTime > 0){\r\n            this.betTimeLabel.node.parent.active = true;\r\n            let allOk = true;\r\n            for(let seat of this.seats){\r\n                let player = seat.getChildByName(\"PlayerNode\").getComponent(\"PlayerCtrl\");\r\n                if(player.curBets <= 0 && !player.isBanker){\r\n                    allOk = false;\r\n                }\r\n            }\r\n            if (allOk){\r\n                // 都下好注开始发牌\r\n                this.startBets = false;\r\n            }\r\n        } else {\r\n            // 超时自动下注最小bet, 按照顺序，逆时针开始\r\n            let orders = this.getDealSeatOrder();\r\n            for(let seat of orders){\r\n                let player = this.getPlayerNode(seat).getComponent(\"PlayerCtrl\");\r\n                if(player.curBets <= 0){\r\n                    player.onBtnDown(null,1);    // 超时自动下注最小bet\r\n                    this.startBets = false;\r\n                    cc.log(\"超时自动下注.\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // 已经下好注，开始发剩下的牌\r\n        if (!this.startBets){\r\n            this.betTimeLabel.node.parent.active = false;\r\n            let cardCounts = GlobalNiuNiu.config.GAME_MODE < 5 ? (5-GlobalNiuNiu.config.GAME_MODE) : GlobalNiuNiu.config.GAME_MODE;\r\n            this.startDeal(cardCounts, ()=>{\r\n                this.openHands();\r\n            });\r\n        }\r\n    },\r\n});\r\n"]}