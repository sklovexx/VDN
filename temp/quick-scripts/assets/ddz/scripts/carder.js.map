{"version":3,"sources":["carder.js"],"names":["carder","that","cardvalue","CardShape","Kings","card_list","isOneCard","cardList","length","IsDoubleCard","card_data","value","undefined","Isthree","IsThreeAndOne","IsThreeAndTwo","IsBoom","map","i","hasOwnProperty","keys","Object","IsKingBoom","king","IsPlan","console","log","key","p1","Number","p2","Math","abs","IsPlanWithSing","three_list","sing_count","push","IsPlanWithDouble","double_count","IsShunzi","tmp_cards","sort","x","y","IsLianDui","CardsValue","name","compareOne","cardA","cardB","valueA","valueB","compareDouble","result","compareThree","compareBoom","compareBoomKing","comparePlanWithSing","lista","listb","comparePlanWithTow","mapA","mapB","listA","listB","comparePlan","maxNum","comparePlaneWithOne","comparePlaneWithDouble","j","JSON","stringify","compareScroll","minNumA","minNumB","compareDoubleScroll","a","compare","current_card_value","one","double","three","boom","kingboom","planeWithOne","planeWithTwo","plane","scroll","doubleScroll","findWithCard","last_cards","current_cards","card_last_value","getCardValue","compareWithCard","card_current_value","IsCanPushs","threeWithOne","threeWithTwo","DoubleScroll"],"mappings":"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","file":"carder.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\ddz\\scripts","sourcesContent":["const carder = function(){\n    var that = {}\n    const cardvalue = {\n        \"A\": 12,\n        \"2\": 13,\n        \"3\": 1,\n        \"4\": 2,\n        \"5\": 3,\n        \"6\": 4,\n        \"7\": 5,\n        \"8\": 6,\n        \"9\": 7,\n        \"10\": 8,\n        \"J\": 9,\n        \"Q\": 10,\n        \"K\": 11,\n    }\n    \n    // 黑桃：spade\n    // 红桃：heart\n    // 梅花：club\n    // 方片：diamond\n    const CardShape = {\n        \"S\": 1,\n        \"H\": 2,\n        \"C\": 3,\n        \"D\": 4,\n    };\n    \n    //大小玩分开写是因为只有一张，并且没有黑桃这些区分\n    const Kings = {\n        \"kx\": 14, //小王\n        \"Kd\": 15,  //大王\n    };\n    var that = {}\n        that.card_list = []\n    \n        \n    \n    //出一张牌\n    const isOneCard = function (cardList) {\n        if (cardList.length === 1) {\n            return true;\n        }\n        return false;\n    }\n\n    //是否对子\n    const IsDoubleCard = function(cardList){\n        \n        if(cardList.length!=2){\n            return false\n        }\n        //cardList[0].value==undefined说明是大小王，值是存储在king字段\n        if(cardList[0].card_data.value== undefined \n            || cardList[0].card_data.value!=cardList[1].card_data.value){\n            return false\n        }\n\n        return true\n    }\n\n    //三张不带\n    const Isthree = function(cardList){\n        \n        if(cardList.length!=3){\n            return false\n        }\n        //不能是大小王\n        if(cardList[0].card_data.value== undefined || cardList[1].card_data.value== undefined){\n            return false\n        }\n        //判断三张牌是否相等\n        if(cardList[0].card_data.value != cardList[1].card_data.value){\n            return false\n        }\n\n        if(cardList[0].card_data.value != cardList[2].card_data.value){\n            return false\n        }\n\n        if(cardList[1].card_data.value != cardList[2].card_data.value){\n            return false\n        }\n        return true\n    }\n    //三带一\n    const IsThreeAndOne = function(cardList){\n        if(cardList.length!=4){\n            return false\n        }\n        //被带的一张放在2头\n        if(cardList[1].card_data.value==undefined || cardList[2].card_data.value==undefined){\n            return false\n        }\n        if (cardList[0].card_data.value==cardList[1].card_data.value && \n            cardList[1].card_data.value==cardList[2].card_data.value){\n            return true;\n\n        }else if (cardList[1].card_data.value== cardList[2].card_data.value && \n            cardList [2].card_data.value == cardList [3].card_data.value){\n                return true;\n        }\n        return false\n    }\n\n    //三带二\n    const IsThreeAndTwo = function(cardList){\n        if(cardList.length!=5){\n            return false\n        }\n\n        if (cardList[0].card_data.value==cardList[1].card_data.value\n            &&cardList[1].card_data.value==cardList[2].card_data.value){\n            if (cardList[3].card_data.value == cardList[4].card_data.value) {\n                return true;\n            }\n\n        } else if (cardList[2].card_data.value == cardList[3].card_data.value &&\n                cardList[3].card_data.value == cardList[4].card_data.value){\n            if (cardList[0].card_data.value == cardList[1].card_data.value) {\n                return true;\n            }\n        }\n\n        return false ;\n\n    }\n\n    //四张炸弹\n    const IsBoom = function(cardList){\n        if(cardList.length!=4){\n            return false\n        }\n\n        var map = {}\n        for(var i=0;i<cardList.length;i++){\n            if(map.hasOwnProperty(cardList[i].card_data.value)){\n                map[cardList[i].card_data.value]++\n            }else{\n                map[cardList[i].card_data.value] = 1\n            }\n        }\n        \n        var keys = Object.keys(map)\n        if(keys.length==1){\n            return true\n        }\n\n        return false\n    }\n\n    //王炸\n    const IsKingBoom = function(cardList){\n        if(cardList.length!=2){\n            return false\n        }\n\n        if(cardList[0].card_data.king!=undefined && cardList[1].card_data.king!=undefined){\n            return true\n        }\n\n        return false\n    }\n\n    //飞机不带\n    const IsPlan = function(cardList){\n        if(cardList.length!=6){\n            return false\n        }\n    \n        var map = {}\n        for(var i=0;i<cardList.length;i++){\n            if(map.hasOwnProperty(cardList[i].card_data.value)){\n                map[cardList[i].card_data.value]++\n            }else{\n                map[cardList[i].card_data.value] = 1\n            }\n        }\n        \n        var keys = Object.keys(map)\n        console.log(\"IsPlan keys\"+keys)\n        if(keys.length==2){\n            //判断相同牌是否为三张\n            for(key in map){\n                if(map[key]!=3){\n                    return false\n                }\n            }\n\n            //判断是否为相邻的牌\n            var p1 = Number(keys[0]) \n            var p2 = Number(keys[1])\n            if(Math.abs(p1-p2)!=1){\n                return false\n            }\n            return true\n        }\n\n        return false\n    }\n\n    //飞机带2个单张\n    const IsPlanWithSing = function(cardList){\n        if(cardList.length!=8){\n            return false\n        }\n        \n        var map = {}\n        for(var i=0;i<cardList.length;i++){\n            if(map.hasOwnProperty(cardList[i].card_data.value)){\n                map[cardList[i].card_data.value]++\n            }else{\n                map[cardList[i].card_data.value] = 1\n            }\n        }\n\n        var keys = Object.keys(map)\n        console.log(\"IsPlan keys\"+keys)\n        if(keys.length!=4){\n            return false\n        }\n        //判断是否有2个三张牌\n        var three_list = []\n        var sing_count = 0\n        for(var i in map){\n            if(map[i]==3){\n                three_list.push(i)\n            }else if(map[i]==1){\n                sing_count++\n            }\n        }\n\n        if(three_list.length!=2 || sing_count!=2){\n            return false\n        }\n\n            //判断是否为相邻的牌\n            var p1 = Number(three_list[0]) \n            var p2 = Number(three_list[1])\n            if(Math.abs(p1-p2)!=1){\n                return false\n            }\n\n        return true\n    }\n    //飞机带2对 \n    const IsPlanWithDouble = function(cardList){\n        if(cardList.length!=10){\n            return false\n        }\n\n        var map = {}\n        for(var i=0;i<cardList.length;i++){\n            if(map.hasOwnProperty(cardList[i].card_data.value)){\n                map[cardList[i].card_data.value]++\n            }else{\n                map[cardList[i].card_data.value] = 1\n            }\n        }\n\n        var keys = Object.keys(map)\n        if(keys.length!=4){\n            return false\n        }\n        /*\n        \"3\":3,\n        \"4\":4,\n        \"j\":2,\n        \"9\":2,\n        */\n        var three_list = []\n        var double_count = 0\n        for(var i in map){\n            if(map[i]==3){\n            three_list.push(i)\n            }else if(map[i]==2){\n            double_count++\n            }\n        }   \n\n        if(three_list.length!=2 || double_count!=2){\n                return false\n        }\n\n        //判断是否为相邻的牌\n        var p1 = Number(three_list[0]) \n        var p2 = Number(three_list[1])\n        if(Math.abs(p1-p2)!=1){\n            return false\n        }\n    \n        return true\n    }\n\n    //顺子\n    const IsShunzi = function(cardList){\n        \n        if(cardList.length<5 || cardList.length>12){\n            return false\n        }\n        var tmp_cards = cardList\n        //不能有2或者大小王\n        for(var i=0;i<tmp_cards.length;i++){\n            if(tmp_cards[i].card_data.value==13 || tmp_cards[i].card_data.value==14\n                ||tmp_cards[i].card_data.value==15){\n                return false  \n            }\n        }\n\n        //排序 从小到大\n        //sort返回正值做交换\n        tmp_cards.sort(function(x,y){\n            return Number(x.card_data.value)-Number(y.card_data.value)\n        })\n        //console.log(\"IsShunzi tmp_cards\"+JSON.stringify(tmp_cards))\n        for(var i=0;i<tmp_cards.length;i++){\n            if(i+1==tmp_cards.length){\n                break\n            }\n            var p1 = Number(tmp_cards[i].card_data.value) \n            var p2 = Number(tmp_cards[i+1].card_data.value)\n            if(Math.abs(p1-p2)!=1){\n                return false\n            }\n    \n        }\n\n        return true\n    }\n\n    //连队\n    const IsLianDui = function(cardList){\n        if(cardList.length<6 || cardList.length>24){\n            return false\n        }\n\n        //不能包括大小王,和2\n        for(var i=0;i<cardList.length;i++){\n            if(cardList[i].card_data.value==14\n                ||cardList[i].card_data.value==15||cardList[i].card_data.value==13){\n                return false  \n            }\n        }\n\n        var map = {}\n        for(var i=0;i<cardList.length;i++){\n            if(map.hasOwnProperty(cardList[i].card_data.value)){\n                map[cardList[i].card_data.value]++\n            }else{\n                map[cardList[i].card_data.value] = 1\n            }\n        }\n\n        //相同牌只能是2张\n        for(var key in map){\n            if(map[key]!=2){\n                return false\n            }\n        }\n        var keys = Object.keys(map)\n        if(keys.length<3){\n            return false\n        }\n        //从小到大排序\n        keys.sort(function(x,y){\n            return Number(x)-Number(y)\n        })\n\n        //对子之间相减绝对值只能是1\n        for(var i=0;i<keys.length;i++){\n            if(i+1==keys.length){\n                break\n            }\n            var p1 = Number(keys[i]) \n            var p2 = Number(keys[i+1])\n            if(Math.abs(p1-p2)!=1){\n                return false\n            }\n    \n        }\n\n        return true\n    }\n\n    //牌型之间大小数值的定义\n    const CardsValue = {\n        'one': {\n            name: 'One',\n            value: 1\n        },\n        'double': {\n            name: 'Double',\n            value: 1\n        },\n        'three': {\n            name: 'Three',\n            value: 1\n        },\n        'boom': { //炸弹\n            name: 'Boom',\n            value: 2\n        },\n        'threeWithOne': {\n            name: 'ThreeWithOne',\n            value: 1\n        },\n        'threeWithTwo': {\n            name: 'ThreeWithTwo',\n            value: 1\n        },\n        'plane': {\n            name: 'Plane',\n            value: 1\n        },\n        'planeWithOne': {\n            name: 'PlaneWithOne',\n            value: 1\n        },\n        'planeWithTwo': {\n            name: 'PlaneWithTwo',\n            value: 1\n        },\n        'scroll': { //顺子\n            name: 'Scroll',\n            value: 1\n        },\n        'doubleScroll': {  //连队\n            name: 'DoubleScroll',\n            value: 1\n        },\n        'kingboom':{ //王炸\n            name: 'kingboom',\n            value: 3\n        },\n\n\n    };\n\n    //cardA是上次出的牌\n    //cardB是当前出的牌\n    //cardB大于cardA返回true\n    const compareOne = function(cardA,cardB){\n        console.log(\"compareOne\")\n        var valueA = 0\n        if(cardA[0].card_data.value==undefined){\n            valueA = cardA[0].card_data.king\n        }else{\n            valueA = cardA[0].card_data.value\n        }\n\n        var valueB = 0\n        if(cardB[0].card_data.value==undefined){\n            valueB = cardB[0].card_data.king\n        }else{\n            valueB = cardB[0].card_data.value\n        }\n        \n        if(valueA>=valueB){\n            return false\n        }\n        return true\n    }\n\n    const compareDouble = function(cardA,cardB){\n        console.log(\"compareDouble\")\n        var result = compareOne(cardA,cardB)\n        return result\n    }\n\n    const compareThree = function(cardA,cardB){\n        console.log(\"compareThree\")\n        var result = compareOne(cardA,cardB)\n        return result\n    }\n\n    const compareBoom = function(cardA,cardB){\n        console.log(\"compareBoom\")\n        var result = false\n        if(cardA.length==4 && cardB.length==4){\n            result = compareOne(cardA,cardB)\n        }\n\n        return result\n    }\n\n    const compareBoomKing = function(cardA,cardB){\n        if(cardB.length!=2){\n            return false\n        }\n        return true\n    }\n    //三带一大小比较\n    const comparePlanWithSing = function(cardA,cardB){\n        //将三带存储到2个列表\n        var lista = []\n        var listb = []\n        var map = {}\n        for(var i=0;i<cardA.length;i++){\n            if(map.hasOwnProperty(cardA.card_data.value)){\n                lista.push(cardA)\n            }else{\n                map[cardA.card_data.value] = 1\n            }\n        }\n\n        for(var i=0;i<cardB.length;i++){\n            if(map.hasOwnProperty(cardB.card_data.value)){\n                listb.push(cardB)\n            }else{\n                map[cardB.card_data.value] = 1\n            }\n        }\n\n        var result = compareOne(cardA,cardB)\n        return result\n    }\n\n    const comparePlanWithTow = function(cardA,cardB){\n        let mapA = {};\n        let mapB = {};\n    \n        for (var i = 0; i < cardA.length; i++) {\n            if (mapA.hasOwnProperty(cardA[i].card_data.value)) {\n                mapA[cardA[i].card_data.value].push(cardA[i]);\n            } else {\n                mapA[cardA[i].card_data.value] = [cardA[i]];\n            }\n        }\n        for (var i = 0; i < cardB.length; i++) {\n            if (mapB.hasOwnProperty(cardB[i].card_data.value)) {\n                mapB[cardB[i].card_data.value].push(cardB[i]);\n            } else {\n                mapB[cardB[i].card_data.value] = [cardB[i]];\n            }\n        }\n\n        var listA = [];\n        for (var i in mapA) {\n            if (mapA[i].length === 3) {\n                listA = mapA[i];\n            }\n        }\n\n        var listB = [];\n        for (var i in mapB) {\n            if (mapB[i].length === 3) {\n                listB = mapB[i];\n            }\n        }\n\n        var result = compareOne(listA,listB)\n        return result\n\n    }\n\n    const comparePlan = function(cardA,cardB){\n        var mapA = {};\n        for (var i = 0; i < cardA.length; i++) {\n            if (mapA.hasOwnProperty(cardA[i].card_data.value)) {\n                mapA[cardA[i].card_data.value].push(cardA[i]);\n            } else {\n                mapA[cardA[i].card_data.value] = [cardA[i]];\n            }\n        }\n\n        var listA = []\n        var maxNum = 16\n        //找到飞机里最小的一张牌\n        for (var i in mapA) {\n            if (Number(i) < maxNum) {\n                maxNum = Number(i)\n                listA = mapA[i]\n            }\n        }\n        \n        //处理cardB\n        var mapB = {};\n        for (var i = 0; i < cardB.length; i++) {\n            if (mapB.hasOwnProperty(cardB[i].card_data.value)) {\n                mapB[cardB[i].card_data.value].push(cardB[i]);\n            } else {\n                mapB[cardB[i].card_data.value] = [cardB[i]];\n            }\n        }\n\n        maxNum = 16\n        var listB = [];\n        for (var i in mapB) {\n            if (Number(i) < maxNum) {\n                maxNum = Number(i);\n                listB = mapB[i];\n            }\n        }\n\n        var result = compareThree(listA,listB)\n        return result\n    }\n\n    //飞机带2张单排\n    const comparePlaneWithOne = function(cardA,cardB){\n        var result = false\n        var mapA = {};\n        var listA = [];\n        for (var i = 0; i < cardA.length; i++) {\n            if (mapA.hasOwnProperty(cardA[i].card_data.value)) {\n                listA.push(cardA[i]);\n            } else {\n                mapA[cardA[i].card_data.value] = [cardA[i]];\n            }\n        }\n\n        var mapB = {};\n        var listB = [];\n        for (var i = 0; i < cardB.length; i++) {\n            if (mapB.hasOwnProperty(cardB[i].card_data.value)) {\n                listB.push(cardB[i]);\n            } else {\n                mapB[cardB[i].card_data.value] = [cardB[i]];\n            }\n        }\n\n        result = comparePlan(listA,listB)\n        return result\n    }\n\n    //飞机带2对\n    const comparePlaneWithDouble = function(cardA,cardB){\n        var mapA = {};\n        for (var i = 0; i < cardA.length; i++) {\n            if (mapA.hasOwnProperty(cardA[i].card_data.value)) {\n                mapA[cardA[i].card_data.value].push(cardA[i]);\n            } else {\n                mapA[cardA[i].card_data.value] = [cardA[i]];\n            }\n        }\n        var mapB = {};\n        for (var i = 0; i < cardB.length; i++) {\n            if (mapB.hasOwnProperty(cardB[i].card_data.value)) {\n                mapB[cardB[i].card_data.value].push(cardB[i]);\n            } else {\n                mapB[cardB[i].card_data.value] = [cardB[i]];\n            }\n        }\n\n        var listA = [];\n        for (var i in mapA) {\n            if (mapA[i].length === 3) {\n                for (var j = 0; j < mapA[i].length; j++) {\n                    listA.push(mapA[i][j]);\n                }\n            }\n        }\n        console.log('list a = ' + JSON.stringify(listA));\n\n        var listB = [];\n        for (var i in mapB) {\n            if (mapB[i].length === 3) {\n                for (var j = 0; j < mapB[i].length; j++) {\n                    listB.push(mapB[i][j]);\n                }\n            }\n        }\n\n        var result = comparePlan(listA,listB)\n        return result\n    }\n\n    const compareScroll = function(cardA,cardB){\n        console.log(\"compareScroll\")\n        if(cardA.length!=cardB.length){\n            return false\n        }\n\n        var minNumA = 100;\n        for (var i = 0; i < cardA.length; i++) {\n            if (cardA[i].card_data.value < minNumA) {\n                minNumA = cardA[i].card_data.value\n            }\n        }\n\n        var minNumB = 100;\n        for (let i = 0; i < cardB.length; i++) {\n            if (cardB[i].card_data.value < minNumB) {\n                minNumB = cardB[i].card_data.value;\n            }\n        }\n\n        console.log('min a = ' + minNumA);\n        console.log('min b = ' + minNumB);\n        if (minNumA <= minNumB) {\n            return true;\n        }\n\n        return false\n    }\n\n    const compareDoubleScroll = function (cardA,cardB) {\n        var mapA = {};\n        var listA = [];\n        for (var i = 0; i < cardA.length; i++) {\n            if (mapA.hasOwnProperty(cardA[i].card_data.value)) {\n\n            } else {\n                mapA[cardA[i].card_data.value] = true;\n                listA.push(a[i]);\n            }\n        }\n\n        var mapB = {};\n        var listB = [];\n        for (var i = 0; i < cardB.length; i++) {\n            if (mapB.hasOwnProperty(cardB[i].card_data.value)) {\n\n            } else {\n                mapB[cardB[i].card_data.value] = true;\n                listB.push(cardB[i]);\n            }\n        }\n        \n        console.log('list a = ' + JSON.stringify(listA));\n        console.log('list b = ' + JSON.stringify(listB));\n\n        return compareScroll(listA, listB);\n    }\n    //cardA上次出的牌\n    //cardB本次出的牌\n    //current_card_value当前牌型\n    const compare = function(cardA,cardB,current_card_value){\n        var result = false\n        switch(current_card_value.name){\n            case CardsValue.one.name:\n                    result = compareOne(cardA,cardB)\n                break\n            case CardsValue.double.name:\n                    result = compareDouble(cardA,cardB)\n                break    \n            case CardsValue.three.name:\n                    result = compareThree(cardA,cardB)\n                break\n            case CardsValue.boom.name:\n                    result = compareBoom(cardA,cardB)\n                break\n            case CardsValue.kingboom.name:\n                    result = compareBoomKing(cardA,cardB)\n                break    \n            case CardsValue.planeWithOne.name:\n                    result = comparePlanWithSing(cardA,cardB)\n                break \n            case CardsValue.planeWithTwo.name:\n                    result = comparePlanWithTow(cardA,cardB)\n                break\n            case CardsValue.plane.name:\n                    result = comparePlan(cardA,cardB)\n                break\n            case  CardsValue.planeWithOne.name:\n                    result = comparePlaneWithOne(cardA,cardB)\n                break   \n            case  CardsValue.planeWithTwo.name:\n                    result = comparePlaneWithDouble(cardA,cardB)\n                break\n            case  CardsValue.scroll.name:\n                    result = compareScroll(cardA,cardB)\n                break\n            case  CardsValue.doubleScroll.name:\n                    result = compareDoubleScroll(cardA,cardB)\n                break               \n            default:\n                console.log(\"no found card value!\")\n                result = false\n                break    \n        }\n\n        return result\n    }\n    that.findWithCard = function(last_cards,current_cards){\n        let card_last_value = getCardValue(last_cards)\n        // switch\n    }\n    that.compareWithCard = function(last_cards,current_cards){\n        //last_cards[{\"cardid\":3,\"card_data\":{\"index\":3,\"value\":13,\"shape\":4}},\n        //{\"cardid\":0,\"card_data\":{\"index\":0,\"value\":13,\"shape\":1}}]\n        console.log(\"last_cards\"+JSON.stringify(last_cards))\n        console.log(\"current_cards\"+JSON.stringify(current_cards))\n        let card_last_value = getCardValue(last_cards)\n        let card_current_value = getCardValue(current_cards)\n        //console.log(\"card_last_value\"+JSON.stringify(card_last_value))\n        //console.log(\"card_current_value\"+JSON.stringify(card_current_value))\n        if(last_cards.value < current_cards.value){\n            console.log(\"compareWithCard less\")\n            return true\n        }else if(last_cards.value == current_cards.value){\n            //牌型必须相同\n            if(card_last_value.name!=card_current_value.name){\n                return '牌型不同'\n            }\n\n            var result = compare(last_cards,current_cards,card_last_value)\n            \n            return result\n        }else{\n            return false\n        }\n\n        \n        return true\n    }\n\n    \n    that.IsCanPushs = function(cardList){\n        if (isOneCard(cardList)) {\n            console.log(\"isOneCard sucess\")\n            return CardsValue.one;\n        }\n\n        if(IsDoubleCard(cardList)){\n            console.log(\"IsDoubleCard sucess\")\n            return CardsValue.double\n        }\n\n        if(Isthree(cardList)){\n            console.log(\"Isthree sucess\")\n            return CardsValue.three\n        }\n\n        if(IsThreeAndOne(cardList)){\n            console.log(\"IsThreeAndOne sucess\")\n            return CardsValue.threeWithOne\n        }\n\n        if(IsThreeAndTwo(cardList)){\n            console.log(\"IsThreeAndTwo sucess\")\n            return CardsValue.threeWithTwo\n        }\n\n        if(IsBoom(cardList)){\n            console.log(\"IsBoom sucess\")\n            return CardsValue.boom\n        }\n\n        if(IsKingBoom(cardList)){\n            console.log(\"IsKingBoom sucess\")\n            return CardsValue.kingboom\n        }\n\n        if(IsPlan(cardList)){\n            console.log(\"IsPlan sucess\")\n            return CardsValue.plane\n        }\n\n        if(IsPlanWithSing(cardList)){\n            console.log(\"IsPlanWithSing sucess\")\n            return CardsValue.planeWithOne\n        }\n\n        if(IsPlanWithDouble(cardList)){\n            console.log(\"IsPlanWithDouble sucess\")\n            return CardsValue.planeWithTwo\n        }\n        \n        if(IsShunzi(cardList)){\n            console.log(\"IsShunzi sucess\")\n            return CardsValue.scroll\n        }\n\n        if(IsLianDui(cardList)){\n            console.log(\"IsLianDui sucess\")\n            return CardsValue.DoubleScroll\n        }\n        //return false\n        return undefined\n    }\n\n    const getCardValue = that.IsCanPushs\n    return that\n}\nexport default carder \n// module.exports = function(){\n    \n   \n//     return that\n// }"]}