{"version":3,"sources":["SocketMgr.js"],"names":["cc","Class","extends","Component","properties","onLoad","handle","game","addPersistRootNode","node","Global","SocketMgr","getComponent","openSocket","ws","WebSocket","Config","socketUrl","onopen","console","log","onmessage","evt","onclose","closeSocket","callback","close","start","send_data","data","undefined","readyState","OPEN","send","JSON","stringify","GetQueryVariable","variable","query","window","location","search","substring","vars","split","i","length","pair"],"mappings":";;;;;;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY,EAHP;;AAML;;AAEAC,UARK,oBAQK;AACN,aAAKC,MAAL,GAAY,EAAZ;AACAN,WAAGO,IAAH,CAAQC,kBAAR,CAA2B,KAAKC,IAAhC;AACAC,eAAOC,SAAP,GAAmB,KAAKF,IAAL,CAAUG,YAAV,CAAuB,WAAvB,CAAnB;AACH,KAZI;;AAaL;AACAC,cAdK,wBAcO;AACR;AACA;AACA,aAAKC,EAAL,GAAU,IAAIC,SAAJ,CAAcC,OAAOC,SAArB,CAAV,CAHQ,CAGkC;AAC1C,aAAKH,EAAL,CAAQI,MAAR,GAAiB,YACjB;AACI;AACA;AACAC,oBAAQC,GAAR,CAAY,OAAZ;AACH,SALD;;AAOA,aAAKN,EAAL,CAAQO,SAAR,GAAoB,UAAUC,GAAV,EACpB;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,SAjDD;AAkDA,aAAKR,EAAL,CAAQS,OAAR,GAAkB,YAClB;AACI;AACAJ,oBAAQC,GAAR,CAAY,UAAZ;AACH,SAJD;AAKA;AACH,KAjFI;AAkFLI,eAlFK,uBAkFOC,QAlFP,EAkFgB;AACjB,aAAKX,EAAL,CAAQY,KAAR;AACAD;AACH,KArFI;AAsFLE,SAtFK,mBAsFI,CAER,CAxFI;;;AA0FL;AACAC,aA3FK,qBA2FKC,IA3FL,EA2FW;AACZ,YAAI,KAAKf,EAAL,IAAWgB,SAAX,IAAwB,KAAKhB,EAAL,CAAQiB,UAAR,IAAsBhB,UAAUiB,IAA5D,EAAkE;AAC9D,iBAAKlB,EAAL,CAAQmB,IAAR,CAAaC,KAAKC,SAAL,CAAeN,IAAf,CAAb;AACCV,oBAAQC,GAAR,CAAY,UAAZ;AACJ;AACD;AACA;AACA;AACA;AACA;AACA;AACH,KAtGI;;;AAwGLgB,sBAAiB,0BAASC,QAAT,EACjB;AACI,YAAIC,QAAQC,OAAOC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC,CAAjC,CAAZ;AACA,YAAIC,OAAOL,MAAMM,KAAN,CAAY,GAAZ,CAAX;AACA,aAAK,IAAIC,IAAE,CAAX,EAAaA,IAAEF,KAAKG,MAApB,EAA2BD,GAA3B,EAAgC;AAC5B,gBAAIE,OAAOJ,KAAKE,CAAL,EAAQD,KAAR,CAAc,GAAd,CAAX;AACA,gBAAGG,KAAK,CAAL,KAAWV,QAAd,EAAuB;AAAC,uBAAOU,KAAK,CAAL,CAAP;AAAgB;AAC3C;AACD,eAAO,KAAP;AACH;AACD;AAlHK,CAAT","file":"SocketMgr.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Manager","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.handle=[]\r\n        cc.game.addPersistRootNode(this.node);\r\n        Global.SocketMgr = this.node.getComponent(\"SocketMgr\");\r\n    },\r\n    //打开socket\r\n    openSocket(){\r\n        // this.ws = new WebSocket('ws://192.168.199.221:8321/websocket/Bearer '+this.GetQueryVariable('token'));//测试地址\r\n        // this.ws = new WebSocket(Config.socketUrl+'/websocket/Bearer '+this.GetQueryVariable('token'));//正式环境\r\n        this.ws = new WebSocket(Config.socketUrl);//正式环境\r\n        this.ws.onopen = function()\r\n        {\r\n            // Web Socket 已连接上，使用 send() 方法发送数据\r\n            // this.ws.send(data);\r\n            console.log(\"连接...\");\r\n        };\r\n        \r\n        this.ws.onmessage = function (evt)\r\n        {\r\n            // let data = JSON.parse(evt.data);\r\n            // // console.log(\"数据已接收\");\r\n            // console.log(data)\r\n            // switch (data.event) {\r\n            //     //用戶數據刷新\r\n            //     case 'USER_REFRESH':\r\n            //         GameData.HongBaoUserData = data.data;\r\n            //         cc.director.GlobalEvent.emit(\"HongBaoUserData\",{})\r\n            //         break;\r\n            //     //新一輪紅包\r\n            //     case 'START':\r\n            //         GameData.CurHongBao = data.data;\r\n            //         cc.director.GlobalEvent.emit(\"CurHongBaoData\",{})\r\n            //         break;\r\n            //     //新一輪紅包倒計時\r\n            //     case 'TIME_REFRESH':\r\n            //         GameData.CountDown = data.data.time;\r\n            //         cc.director.GlobalEvent.emit(\"CountDown\",{})\r\n            //         GameData.KaiJiangList = data.data.data;\r\n            //         cc.director.GlobalEvent.emit(\"KaiJiangList\",{})\r\n            //         break;\r\n            //     //結算開始\r\n            //     case 'SETTLEMENT_START':\r\n            //         GameData.ReadParkSinl = 0;\r\n            //         // Global.PageMgr.showLoadingPage('正在结算，请稍后')\r\n            //         break;\r\n            //     //結算結束\r\n            //     case 'SETTLEMENT_END':\r\n            //         GameData.KaiJiangList = data.data.members;\r\n            //         GameData.HongBaoJieGuo = data.data.bankerProFit;\r\n            //         cc.director.GlobalEvent.emit(\"KaiJiangList\",{})\r\n            //         cc.director.GlobalEvent.emit(\"KaiJiang\",{})\r\n            //         // Global.PageMgr.closeLoadingPage()\r\n            //         break;\r\n            //     //玩家列表刷新\r\n            //     case 'RED_REFRESH':\r\n            //         GameData.HongBaoList = data.data;\r\n            //         cc.director.GlobalEvent.emit(\"HongBaoListData\",{})\r\n            //         break;\r\n            //     //服務器即將開始維護事件\r\n            //     case 'ABOUT_TO_BEGIN_MAINTENANCE':\r\n            //         console.log(data);\r\n            //         Global.PageMgr.showTipPage('服务器即将开始维护')\r\n            //         break;\r\n            //     default:\r\n            //         return;\r\n            // }\r\n        };\r\n        this.ws.onclose = function()\r\n        {\r\n            // 关闭 websocket\r\n            console.log(\"连接已关闭...\");\r\n        };\r\n        // 打开一个 web socket\r\n    },\r\n    closeSocket(callback){\r\n        this.ws.close()\r\n        callback()\r\n    },\r\n    start () {\r\n\r\n    },\r\n    \r\n    // 发送数据, sock.send;\r\n    send_data(data) {\r\n        if (this.ws != undefined && this.ws.readyState == WebSocket.OPEN) {\r\n            this.ws.send(JSON.stringify(data));\r\n             console.log(\"连接ing...\");\r\n        }\r\n        // else if(this.ws != undefined && this.ws.readyState == WebSocket.CLOSED)\r\n        // {\r\n        //     // this.openSocket();\r\n        //     // console.log(\"再次连接...\");\r\n        //     // this.ws.send(JSON.stringify(data));\r\n        // }\r\n    },\r\n\r\n    GetQueryVariable:function(variable)\r\n    {\r\n        let query = window.location.search.substring(1);\r\n        let vars = query.split(\"&\");\r\n        for (let i=0;i<vars.length;i++) {\r\n            let pair = vars[i].split(\"=\");\r\n            if(pair[0] == variable){return pair[1];}\r\n        }\r\n        return(false);\r\n    },\r\n    // update (dt) {},\r\n});\r\n"]}